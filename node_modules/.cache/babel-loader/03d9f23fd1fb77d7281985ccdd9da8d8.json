{"ast":null,"code":"import _defineProperty from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Header/PagesHeader.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\"; // core components\n\nimport Button from \"components/CustomButtons/Button\";\nimport pagesRoutes from \"routes/pages.jsx\";\nimport pagesHeaderStyle from \"assets/jss/material-dashboard-pro-react/components/pagesHeaderStyle.jsx\";\n\nvar PagesHeader =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PagesHeader, _React$Component);\n\n  function PagesHeader(props) {\n    var _this;\n\n    _classCallCheck(this, PagesHeader);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PagesHeader).call(this, props));\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        open: !_this.state.open\n      });\n    };\n\n    _this.state = {\n      open: false\n    };\n    return _this;\n  }\n\n  _createClass(PagesHeader, [{\n    key: \"activeRoute\",\n    // verifies if routeName is the one active (in browser input)\n    value: function activeRoute(routeName) {\n      return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.setState({\n          open: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          color = _this$props.color;\n      var appBarClasses = cx(_defineProperty({}, \" \" + classes[color], color));\n      var list = React.createElement(List, {\n        className: classes.list,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(ListItem, {\n        className: classes.listItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(NavLink, {\n        to: \"/dashboard\",\n        className: classes.navLink,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(ListItemIcon, {\n        className: classes.listItemIcon,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Dashboard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      })), React.createElement(ListItemText, {\n        primary: \"Dashboard\",\n        disableTypography: true,\n        className: classes.listItemText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }))), pagesRoutes.map(function (prop, key) {\n        if (prop.redirect) {\n          return null;\n        }\n\n        var navLink = classes.navLink + cx(_defineProperty({}, \" \" + classes.navLinkActive, _this2.activeRoute(prop.path)));\n        return React.createElement(ListItem, {\n          key: key,\n          className: classes.listItem,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76\n          },\n          __self: this\n        }, React.createElement(NavLink, {\n          to: prop.path,\n          className: navLink,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, React.createElement(ListItemIcon, {\n          className: classes.listItemIcon,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(prop.icon, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        })), React.createElement(ListItemText, {\n          primary: prop.short,\n          disableTypography: true,\n          className: classes.listItemText,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81\n          },\n          __self: this\n        })));\n      }));\n      return React.createElement(AppBar, {\n        position: \"static\",\n        className: classes.appBar + appBarClasses,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(Toolbar, {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(Button, {\n        href: \"#\",\n        className: classes.title,\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Material Dashboard Pro React\"))), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.flex,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(Button, {\n        href: \"#\",\n        className: classes.title,\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"MD Pro React\"))), React.createElement(Hidden, {\n        smDown: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, list), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: classes.sidebarButton,\n        color: \"transparent\",\n        justIcon: true,\n        \"aria-label\": \"open drawer\",\n        onClick: this.handleDrawerToggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(Menu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }))), React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Hidden, {\n        mdUp: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Drawer, {\n        variant: \"temporary\",\n        anchor: \"right\",\n        open: this.state.open,\n        classes: {\n          paper: classes.drawerPaper\n        },\n        onClose: this.handleDrawerToggle,\n        ModalProps: {\n          keepMounted: true // Better open performance on mobile.\n\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, list)))));\n    }\n  }]);\n\n  return PagesHeader;\n}(React.Component);\n\nPagesHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"])\n};\nexport default withStyles(pagesHeaderStyle)(PagesHeader);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Header/PagesHeader.jsx"],"names":["React","cx","PropTypes","NavLink","withStyles","AppBar","Toolbar","Hidden","Drawer","List","ListItem","ListItemIcon","ListItemText","Dashboard","Menu","Button","pagesRoutes","pagesHeaderStyle","PagesHeader","props","handleDrawerToggle","setState","open","state","routeName","location","pathname","indexOf","e","history","classes","color","appBarClasses","list","listItem","navLink","listItemIcon","listItemText","map","prop","key","redirect","navLinkActive","activeRoute","path","short","appBar","container","flex","title","sidebarButton","paper","drawerPaper","keepMounted","Component","propTypes","object","isRequired","oneOf"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { NavLink } from \"react-router-dom\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\n\n// @material-ui/icons\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Menu from \"@material-ui/icons/Menu\";\n\n// core components\nimport Button from \"components/CustomButtons/Button\";\n\nimport pagesRoutes from \"routes/pages.jsx\";\n\nimport pagesHeaderStyle from \"assets/jss/material-dashboard-pro-react/components/pagesHeaderStyle.jsx\";\n\nclass PagesHeader extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      open: false\n    };\n  }\n  handleDrawerToggle = () => {\n    this.setState({ open: !this.state.open });\n  };\n  // verifies if routeName is the one active (in browser input)\n  activeRoute(routeName) {\n    return this.props.location.pathname.indexOf(routeName) > -1 ? true : false;\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.setState({ open: false });\n    }\n  }\n  render() {\n    const { classes, color } = this.props;\n    const appBarClasses = cx({\n      [\" \" + classes[color]]: color\n    });\n    var list = (\n      <List className={classes.list}>\n        <ListItem className={classes.listItem}>\n          <NavLink to={\"/dashboard\"} className={classes.navLink}>\n            <ListItemIcon className={classes.listItemIcon}>\n              <Dashboard />\n            </ListItemIcon>\n            <ListItemText\n              primary={\"Dashboard\"}\n              disableTypography={true}\n              className={classes.listItemText}\n            />\n          </NavLink>\n        </ListItem>\n        {pagesRoutes.map((prop, key) => {\n          if (prop.redirect) {\n            return null;\n          }\n          const navLink =\n            classes.navLink +\n            cx({\n              [\" \" + classes.navLinkActive]: this.activeRoute(prop.path)\n            });\n          return (\n            <ListItem key={key} className={classes.listItem}>\n              <NavLink to={prop.path} className={navLink}>\n                <ListItemIcon className={classes.listItemIcon}>\n                  <prop.icon />\n                </ListItemIcon>\n                <ListItemText\n                  primary={prop.short}\n                  disableTypography={true}\n                  className={classes.listItemText}\n                />\n              </NavLink>\n            </ListItem>\n          );\n        })}\n      </List>\n    );\n    return (\n      <AppBar position=\"static\" className={classes.appBar + appBarClasses}>\n        <Toolbar className={classes.container}>\n          <Hidden smDown>\n            <div className={classes.flex}>\n              <Button href=\"#\" className={classes.title} color=\"transparent\">\n                Material Dashboard Pro React\n              </Button>\n            </div>\n          </Hidden>\n          <Hidden mdUp>\n            <div className={classes.flex}>\n              <Button href=\"#\" className={classes.title} color=\"transparent\">\n                MD Pro React\n              </Button>\n            </div>\n          </Hidden>\n          <Hidden smDown>{list}</Hidden>\n          <Hidden mdUp>\n            <Button\n              className={classes.sidebarButton}\n              color=\"transparent\"\n              justIcon\n              aria-label=\"open drawer\"\n              onClick={this.handleDrawerToggle}\n            >\n              <Menu />\n            </Button>\n          </Hidden>\n          <Hidden mdUp>\n            <Hidden mdUp>\n              <Drawer\n                variant=\"temporary\"\n                anchor={\"right\"}\n                open={this.state.open}\n                classes={{\n                  paper: classes.drawerPaper\n                }}\n                onClose={this.handleDrawerToggle}\n                ModalProps={{\n                  keepMounted: true // Better open performance on mobile.\n                }}\n              >\n                {list}\n              </Drawer>\n            </Hidden>\n          </Hidden>\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nPagesHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"])\n};\n\nexport default withStyles(pagesHeaderStyle)(PagesHeader);\n"]},"metadata":{},"sourceType":"module"}