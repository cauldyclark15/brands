{"ast":null,"code":"import _defineProperty from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Forms/ValidationForms.jsx\";\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\"; // material ui icons\n\nimport MailOutline from \"@material-ui/icons/MailOutline\";\nimport Contacts from \"@material-ui/icons/Contacts\";\nimport Check from \"@material-ui/icons/Check\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardText from \"components/Card/CardText.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\"; // style for this view\n\nimport validationFormsStyle from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.jsx\";\n\nvar ValidationForms =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ValidationForms, _React$Component);\n\n  function ValidationForms(props) {\n    var _this;\n\n    _classCallCheck(this, ValidationForms);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ValidationForms).call(this, props));\n    _this.state = {\n      // register form\n      registerEmail: \"\",\n      registerEmailState: \"\",\n      registerPassword: \"\",\n      registerPasswordState: \"\",\n      registerConfirmPassword: \"\",\n      registerConfirmPasswordState: \"\",\n      registerCheckbox: false,\n      registerCheckboxState: \"\",\n      // login form\n      loginEmail: \"\",\n      loginEmailState: \"\",\n      loginPassword: \"\",\n      loginPasswordState: \"\",\n      // type validation\n      required: \"\",\n      requiredState: \"\",\n      typeEmail: \"\",\n      typeEmailState: \"\",\n      number: \"\",\n      numberState: \"\",\n      url: \"\",\n      urlState: \"\",\n      equalTo: \"\",\n      whichEqualTo: \"\",\n      equalToState: \"\",\n      // range validation\n      minLength: \"\",\n      minLengthState: \"\",\n      maxLength: \"\",\n      maxLengthState: \"\",\n      range: \"\",\n      rangeState: \"\",\n      minValue: \"\",\n      minValueState: \"\",\n      maxValue: \"\",\n      maxValueState: \"\"\n    };\n    _this.registerClick = _this.registerClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.loginClick = _this.loginClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.typeClick = _this.typeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.rangeClick = _this.rangeClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // function that returns true if value is email, false otherwise\n\n\n  _createClass(ValidationForms, [{\n    key: \"verifyEmail\",\n    value: function verifyEmail(value) {\n      var emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n      if (emailRex.test(value)) {\n        return true;\n      }\n\n      return false;\n    } // function that verifies if a string has a given length or not\n\n  }, {\n    key: \"verifyLength\",\n    value: function verifyLength(value, length) {\n      if (value.length >= length) {\n        return true;\n      }\n\n      return false;\n    } // function that verifies if two strings are equal\n\n  }, {\n    key: \"compare\",\n    value: function compare(string1, string2) {\n      if (string1 === string2) {\n        return true;\n      }\n\n      return false;\n    } // function that verifies if value contains only numbers\n\n  }, {\n    key: \"verifyNumber\",\n    value: function verifyNumber(value) {\n      var numberRex = new RegExp(\"^[0-9]+$\");\n\n      if (numberRex.test(value)) {\n        return true;\n      }\n\n      return false;\n    } // verifies if value is a valid URL\n\n  }, {\n    key: \"verifyUrl\",\n    value: function verifyUrl(value) {\n      try {\n        new URL(value);\n        return true;\n      } catch (_) {\n        return false;\n      }\n    }\n  }, {\n    key: \"change\",\n    value: function change(event, stateName, type, stateNameEqualTo, maxValue) {\n      switch (type) {\n        case \"email\":\n          if (this.verifyEmail(event.target.value)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"password\":\n          if (this.verifyLength(event.target.value, 1)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"equalTo\":\n          if (this.compare(event.target.value, this.state[stateNameEqualTo])) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"checkbox\":\n          if (event.target.checked) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"number\":\n          if (this.verifyNumber(event.target.value)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"length\":\n          if (this.verifyLength(event.target.value, stateNameEqualTo)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"max-length\":\n          if (!this.verifyLength(event.target.value, stateNameEqualTo + 1)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"url\":\n          if (this.verifyUrl(event.target.value)) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"min-value\":\n          if (this.verifyNumber(event.target.value) && event.target.value >= stateNameEqualTo) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"max-value\":\n          if (this.verifyNumber(event.target.value) && event.target.value <= stateNameEqualTo) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        case \"range\":\n          if (this.verifyNumber(event.target.value) && event.target.value >= stateNameEqualTo && event.target.value <= maxValue) {\n            this.setState(_defineProperty({}, stateName + \"State\", \"success\"));\n          } else {\n            this.setState(_defineProperty({}, stateName + \"State\", \"error\"));\n          }\n\n          break;\n\n        default:\n          break;\n      }\n\n      switch (type) {\n        case \"checkbox\":\n          this.setState(_defineProperty({}, stateName, event.target.checked));\n          break;\n\n        default:\n          this.setState(_defineProperty({}, stateName, event.target.value));\n          break;\n      }\n    }\n  }, {\n    key: \"registerClick\",\n    value: function registerClick() {\n      if (this.state.registerEmailState === \"\") {\n        this.setState({\n          registerEmailState: \"error\"\n        });\n      }\n\n      if (this.state.registerPasswordState === \"\") {\n        this.setState({\n          registerPasswordState: \"error\"\n        });\n      }\n\n      if (this.state.registerConfirmPasswordState === \"\") {\n        this.setState({\n          registerConfirmPasswordState: \"error\"\n        });\n      }\n\n      if (this.state.registerCheckboxState === \"\") {\n        this.setState({\n          registerCheckboxState: \"error\"\n        });\n      }\n    }\n  }, {\n    key: \"loginClick\",\n    value: function loginClick() {\n      if (this.state.loginEmailState === \"\") {\n        this.setState({\n          loginEmailState: \"error\"\n        });\n      }\n\n      if (this.state.loginPasswordState === \"\") {\n        this.setState({\n          loginPasswordState: \"error\"\n        });\n      }\n    }\n  }, {\n    key: \"typeClick\",\n    value: function typeClick() {\n      if (this.state.requiredState === \"\") {\n        this.setState({\n          requiredState: \"error\"\n        });\n      }\n\n      if (this.state.typeEmailState === \"\") {\n        this.setState({\n          typeEmailState: \"error\"\n        });\n      }\n\n      if (this.state.numberState === \"\") {\n        this.setState({\n          numberState: \"error\"\n        });\n      }\n\n      if (this.state.urlState === \"\") {\n        this.setState({\n          urlState: \"error\"\n        });\n      }\n\n      if (this.state.equalToState === \"\") {\n        this.setState({\n          equalToState: \"error\"\n        });\n      }\n    }\n  }, {\n    key: \"rangeClick\",\n    value: function rangeClick() {\n      if (this.state.minLengthState === \"\") {\n        this.setState({\n          minLengthState: \"error\"\n        });\n      }\n\n      if (this.state.maxLengthState === \"\") {\n        this.setState({\n          maxLengthState: \"error\"\n        });\n      }\n\n      if (this.state.rangeState === \"\") {\n        this.setState({\n          rangeState: \"error\"\n        });\n      }\n\n      if (this.state.minValueState === \"\") {\n        this.setState({\n          minValueState: \"error\"\n        });\n      }\n\n      if (this.state.maxValueState === \"\") {\n        this.setState({\n          maxValueState: \"error\"\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 277\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 278\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"rose\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(MailOutline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.cardIconTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      }, \"Register Forms\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.registerEmailState === \"success\",\n        error: this.state.registerEmailState === \"error\",\n        labelText: \"Email Address *\",\n        id: \"registeremail\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"registerEmail\", \"email\");\n          },\n          type: \"email\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        success: this.state.registerPasswordState === \"success\",\n        error: this.state.registerPasswordState === \"error\",\n        labelText: \"Password *\",\n        id: \"registerpassword\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"registerPassword\", \"password\");\n          },\n          type: \"password\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        success: this.state.registerConfirmPasswordState === \"success\",\n        error: this.state.registerConfirmPasswordState === \"error\",\n        labelText: \"Confirm Password *\",\n        id: \"registerconfirmpassword\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"registerConfirmPassword\", \"equalTo\", \"registerPassword\");\n          },\n          type: \"password\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.formCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 338\n        },\n        __self: this\n      }, \"*\"), \" Required fields\"), React.createElement(FormControlLabel, {\n        control: React.createElement(Checkbox, {\n          tabIndex: -1,\n          onClick: function onClick(event) {\n            return _this2.change(event, \"registerCheckbox\", \"checkbox\");\n          },\n          checkedIcon: React.createElement(Check, {\n            className: classes.checkedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 347\n            },\n            __self: this\n          }),\n          icon: React.createElement(Check, {\n            className: classes.uncheckedIcon,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 348\n            },\n            __self: this\n          }),\n          classes: {\n            checked: classes.checked,\n            root: classes.checkRoot\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        }),\n        classes: {\n          label: classes.label + (this.state.registerCheckboxState === \"error\" ? \" \" + classes.labelError : \"\")\n        },\n        label: \"Subscribe to newsletter\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 340\n        },\n        __self: this\n      }), React.createElement(Button, {\n        color: \"rose\",\n        onClick: this.registerClick,\n        className: classes.registerButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }, \"Register\"))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 375\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 376\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"rose\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, React.createElement(Contacts, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.cardIconTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 381\n        },\n        __self: this\n      }, \"Login Form\")), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.loginEmailState === \"success\",\n        error: this.state.loginEmailState === \"error\",\n        labelText: \"Email Address *\",\n        id: \"loginemail\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"loginEmail\", \"email\");\n          },\n          type: \"email\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }), React.createElement(CustomInput, {\n        success: this.state.loginPasswordState === \"success\",\n        error: this.state.loginPasswordState === \"error\",\n        labelText: \"Password *\",\n        id: \"loginpassword\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"loginPassword\", \"password\");\n          },\n          type: \"password\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.formCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"*\"), \" Required fields\"), React.createElement(\"div\", {\n        className: classes.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"rose\",\n        onClick: this.loginClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, \"Login\")))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"rose\",\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 429\n        },\n        __self: this\n      }, \"Type Validation\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 432\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 434\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 436\n        },\n        __self: this\n      }, \"Required Text\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.requiredState === \"success\",\n        error: this.state.requiredState === \"error\",\n        id: \"required\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"required\", \"length\", 0);\n          },\n          type: \"text\",\n          endAdornment: this.state.requiredState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 454\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 455\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 463\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 464\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }, \"required\")))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Email\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.typeEmailState === \"success\",\n        error: this.state.typeEmailState === \"error\",\n        id: \"typeemail\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"typeEmail\", \"email\");\n          },\n          type: \"email\",\n          endAdornment: this.state.typeEmailState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 489\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 490\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 498\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }, \"email\")))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 504\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 505\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }, \"Number\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 510\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.numberState === \"success\",\n        error: this.state.numberState === \"error\",\n        id: \"number\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"number\", \"number\");\n          },\n          type: \"number\",\n          endAdornment: this.state.numberState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 524\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 525\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 511\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 534\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 535\n        },\n        __self: this\n      }, \"number\")))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 539\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 540\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }, \"Url\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.urlState === \"success\",\n        error: this.state.urlState === \"error\",\n        id: \"url\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"url\", \"url\");\n          },\n          type: \"text\",\n          endAdornment: this.state.urlState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 558\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 559\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 567\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 569\n        },\n        __self: this\n      }, \"url\")))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 575\n        },\n        __self: this\n      }, \"Equal to\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.equalToState === \"success\",\n        error: this.state.equalToState === \"error\",\n        id: \"equalto\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"whichEqualTo\");\n          },\n          type: \"text\",\n          endAdornment: this.state.equalToState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 592\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 593\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 601\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.equalToState === \"success\",\n        error: this.state.equalToState === \"error\",\n        id: \"whichequalto\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"equalTo\", \"equalTo\", \"whichEqualTo\");\n          },\n          type: \"text\",\n          endAdornment: this.state.equalToState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 620\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 621\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 629\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 631\n        },\n        __self: this\n      }, \"equalTo\")))))), React.createElement(CardFooter, {\n        className: classes.justifyContentCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 637\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"rose\",\n        onClick: this.typeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 638\n        },\n        __self: this\n      }, \"Validate Inputs\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 644\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"rose\",\n        text: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, React.createElement(CardText, {\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 647\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 648\n        },\n        __self: this\n      }, \"Range Validation\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 651\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 652\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }, \"Min Length\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.minLengthState === \"success\",\n        error: this.state.minLengthState === \"error\",\n        id: \"minlength\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"minLength\", \"length\", 5);\n          },\n          type: \"text\",\n          endAdornment: this.state.minLengthState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 673\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 674\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 660\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 682\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 683\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 684\n        },\n        __self: this\n      }, \"minLength=\\\"5\\\"\"))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \"Max Length\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 692\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.maxLengthState === \"success\",\n        error: this.state.maxLengthState === \"error\",\n        id: \"maxlength\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"maxLength\", \"max-length\", 5);\n          },\n          type: \"text\",\n          endAdornment: this.state.maxLengthState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 706\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 707\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 693\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 715\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 716\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 717\n        },\n        __self: this\n      }, \"maxLength=\\\"5\\\"\"))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 720\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 721\n        },\n        __self: this\n      }, \"Range\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 725\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.rangeState === \"success\",\n        error: this.state.rangeState === \"error\",\n        id: \"range\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"range\", \"range\", 6, 10);\n          },\n          type: \"text\",\n          endAdornment: this.state.rangeState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 739\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 740\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 726\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 748\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 749\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, \"range=\\\"[6,10]\\\"\"))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 753\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 754\n        },\n        __self: this\n      }, \"Min Value\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 758\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.minValueState === \"success\",\n        error: this.state.minValueState === \"error\",\n        id: \"minvalue\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"minValue\", \"min-value\", 6);\n          },\n          type: \"text\",\n          endAdornment: this.state.minValueState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 772\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 773\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 759\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 781\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 782\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 783\n        },\n        __self: this\n      }, \"min=\\\"6\\\"\"))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 786\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 787\n        },\n        __self: this\n      }, \"Max Value\")), React.createElement(GridItem, {\n        xs: 12,\n        sm: 7,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 791\n        },\n        __self: this\n      }, React.createElement(CustomInput, {\n        success: this.state.maxValueState === \"success\",\n        error: this.state.maxValueState === \"error\",\n        id: \"maxvalue\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          onChange: function onChange(event) {\n            return _this2.change(event, \"maxValue\", \"max-value\", 6);\n          },\n          type: \"text\",\n          endAdornment: this.state.maxValueState === \"error\" ? React.createElement(InputAdornment, {\n            position: \"end\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 805\n            },\n            __self: this\n          }, React.createElement(Close, {\n            className: classes.danger,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 806\n            },\n            __self: this\n          })) : undefined\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 792\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 814\n        },\n        __self: this\n      }, React.createElement(FormLabel, {\n        className: classes.labelLeftHorizontal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 815\n        },\n        __self: this\n      }, React.createElement(\"code\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 816\n        },\n        __self: this\n      }, \"max=\\\"6\\\"\")))))), React.createElement(CardFooter, {\n        className: classes.justifyContentCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 822\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"rose\",\n        onClick: this.rangeClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 823\n        },\n        __self: this\n      }, \"Validate Inputs\")))));\n    }\n  }]);\n\n  return ValidationForms;\n}(React.Component);\n\nexport default withStyles(validationFormsStyle)(ValidationForms);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Forms/ValidationForms.jsx"],"names":["React","withStyles","FormControlLabel","FormLabel","Checkbox","InputAdornment","MailOutline","Contacts","Check","Close","GridContainer","GridItem","CustomInput","Button","Card","CardHeader","CardText","CardIcon","CardBody","CardFooter","validationFormsStyle","ValidationForms","props","state","registerEmail","registerEmailState","registerPassword","registerPasswordState","registerConfirmPassword","registerConfirmPasswordState","registerCheckbox","registerCheckboxState","loginEmail","loginEmailState","loginPassword","loginPasswordState","required","requiredState","typeEmail","typeEmailState","number","numberState","url","urlState","equalTo","whichEqualTo","equalToState","minLength","minLengthState","maxLength","maxLengthState","range","rangeState","minValue","minValueState","maxValue","maxValueState","registerClick","bind","loginClick","typeClick","rangeClick","value","emailRex","test","length","string1","string2","numberRex","RegExp","URL","_","event","stateName","type","stateNameEqualTo","verifyEmail","target","setState","verifyLength","compare","checked","verifyNumber","verifyUrl","classes","cardIconTitle","fullWidth","onChange","change","formCategory","checkedIcon","uncheckedIcon","root","checkRoot","label","labelError","registerButton","center","cardTitle","labelHorizontal","endAdornment","danger","undefined","labelLeftHorizontal","justifyContentCenter","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\n// material ui icons\nimport MailOutline from \"@material-ui/icons/MailOutline\";\nimport Contacts from \"@material-ui/icons/Contacts\";\nimport Check from \"@material-ui/icons/Check\";\nimport Close from \"@material-ui/icons/Close\";\n\n// core components\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardText from \"components/Card/CardText.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\n\n// style for this view\nimport validationFormsStyle from \"assets/jss/material-dashboard-pro-react/views/validationFormsStyle.jsx\";\n\nclass ValidationForms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // register form\n      registerEmail: \"\",\n      registerEmailState: \"\",\n      registerPassword: \"\",\n      registerPasswordState: \"\",\n      registerConfirmPassword: \"\",\n      registerConfirmPasswordState: \"\",\n      registerCheckbox: false,\n      registerCheckboxState: \"\",\n      // login form\n      loginEmail: \"\",\n      loginEmailState: \"\",\n      loginPassword: \"\",\n      loginPasswordState: \"\",\n      // type validation\n      required: \"\",\n      requiredState: \"\",\n      typeEmail: \"\",\n      typeEmailState: \"\",\n      number: \"\",\n      numberState: \"\",\n      url: \"\",\n      urlState: \"\",\n      equalTo: \"\",\n      whichEqualTo: \"\",\n      equalToState: \"\",\n      // range validation\n      minLength: \"\",\n      minLengthState: \"\",\n      maxLength: \"\",\n      maxLengthState: \"\",\n      range: \"\",\n      rangeState: \"\",\n      minValue: \"\",\n      minValueState: \"\",\n      maxValue: \"\",\n      maxValueState: \"\"\n    };\n    this.registerClick = this.registerClick.bind(this);\n    this.loginClick = this.loginClick.bind(this);\n    this.typeClick = this.typeClick.bind(this);\n    this.rangeClick = this.rangeClick.bind(this);\n  }\n  // function that returns true if value is email, false otherwise\n  verifyEmail(value) {\n    let emailRex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    if (emailRex.test(value)) {\n      return true;\n    }\n    return false;\n  }\n  // function that verifies if a string has a given length or not\n  verifyLength(value, length) {\n    if (value.length >= length) {\n      return true;\n    }\n    return false;\n  }\n  // function that verifies if two strings are equal\n  compare(string1, string2) {\n    if (string1 === string2) {\n      return true;\n    }\n    return false;\n  }\n  // function that verifies if value contains only numbers\n  verifyNumber(value) {\n    let numberRex = new RegExp(\"^[0-9]+$\");\n    if (numberRex.test(value)) {\n      return true;\n    }\n    return false;\n  }\n  // verifies if value is a valid URL\n  verifyUrl(value) {\n    try {\n      new URL(value);\n      return true;\n    } catch (_) {\n      return false;\n    }\n  }\n  change(event, stateName, type, stateNameEqualTo, maxValue) {\n    switch (type) {\n      case \"email\":\n        if (this.verifyEmail(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"password\":\n        if (this.verifyLength(event.target.value, 1)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"equalTo\":\n        if (this.compare(event.target.value, this.state[stateNameEqualTo])) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"checkbox\":\n        if (event.target.checked) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"number\":\n        if (this.verifyNumber(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"length\":\n        if (this.verifyLength(event.target.value, stateNameEqualTo)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"max-length\":\n        if (!this.verifyLength(event.target.value, stateNameEqualTo + 1)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"url\":\n        if (this.verifyUrl(event.target.value)) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"min-value\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value >= stateNameEqualTo\n        ) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"max-value\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value <= stateNameEqualTo\n        ) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      case \"range\":\n        if (\n          this.verifyNumber(event.target.value) &&\n          event.target.value >= stateNameEqualTo &&\n          event.target.value <= maxValue\n        ) {\n          this.setState({ [stateName + \"State\"]: \"success\" });\n        } else {\n          this.setState({ [stateName + \"State\"]: \"error\" });\n        }\n        break;\n      default:\n        break;\n    }\n    switch (type) {\n      case \"checkbox\":\n        this.setState({ [stateName]: event.target.checked });\n        break;\n      default:\n        this.setState({ [stateName]: event.target.value });\n        break;\n    }\n  }\n  registerClick() {\n    if (this.state.registerEmailState === \"\") {\n      this.setState({ registerEmailState: \"error\" });\n    }\n    if (this.state.registerPasswordState === \"\") {\n      this.setState({ registerPasswordState: \"error\" });\n    }\n    if (this.state.registerConfirmPasswordState === \"\") {\n      this.setState({ registerConfirmPasswordState: \"error\" });\n    }\n    if (this.state.registerCheckboxState === \"\") {\n      this.setState({ registerCheckboxState: \"error\" });\n    }\n  }\n  loginClick() {\n    if (this.state.loginEmailState === \"\") {\n      this.setState({ loginEmailState: \"error\" });\n    }\n    if (this.state.loginPasswordState === \"\") {\n      this.setState({ loginPasswordState: \"error\" });\n    }\n  }\n  typeClick() {\n    if (this.state.requiredState === \"\") {\n      this.setState({ requiredState: \"error\" });\n    }\n    if (this.state.typeEmailState === \"\") {\n      this.setState({ typeEmailState: \"error\" });\n    }\n    if (this.state.numberState === \"\") {\n      this.setState({ numberState: \"error\" });\n    }\n    if (this.state.urlState === \"\") {\n      this.setState({ urlState: \"error\" });\n    }\n    if (this.state.equalToState === \"\") {\n      this.setState({ equalToState: \"error\" });\n    }\n  }\n  rangeClick() {\n    if (this.state.minLengthState === \"\") {\n      this.setState({ minLengthState: \"error\" });\n    }\n    if (this.state.maxLengthState === \"\") {\n      this.setState({ maxLengthState: \"error\" });\n    }\n    if (this.state.rangeState === \"\") {\n      this.setState({ rangeState: \"error\" });\n    }\n    if (this.state.minValueState === \"\") {\n      this.setState({ minValueState: \"error\" });\n    }\n    if (this.state.maxValueState === \"\") {\n      this.setState({ maxValueState: \"error\" });\n    }\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <GridContainer>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"rose\" icon>\n              <CardIcon color=\"rose\">\n                <MailOutline />\n              </CardIcon>\n              <h4 className={classes.cardIconTitle}>Register Forms</h4>\n            </CardHeader>\n            <CardBody>\n              <form>\n                <CustomInput\n                  success={this.state.registerEmailState === \"success\"}\n                  error={this.state.registerEmailState === \"error\"}\n                  labelText=\"Email Address *\"\n                  id=\"registeremail\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event =>\n                      this.change(event, \"registerEmail\", \"email\"),\n                    type: \"email\"\n                  }}\n                />\n                <CustomInput\n                  success={this.state.registerPasswordState === \"success\"}\n                  error={this.state.registerPasswordState === \"error\"}\n                  labelText=\"Password *\"\n                  id=\"registerpassword\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event =>\n                      this.change(event, \"registerPassword\", \"password\"),\n                    type: \"password\"\n                  }}\n                />\n                <CustomInput\n                  success={\n                    this.state.registerConfirmPasswordState === \"success\"\n                  }\n                  error={this.state.registerConfirmPasswordState === \"error\"}\n                  labelText=\"Confirm Password *\"\n                  id=\"registerconfirmpassword\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event =>\n                      this.change(\n                        event,\n                        \"registerConfirmPassword\",\n                        \"equalTo\",\n                        \"registerPassword\"\n                      ),\n                    type: \"password\"\n                  }}\n                />\n                <div className={classes.formCategory}>\n                  <small>*</small> Required fields\n                </div>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      tabIndex={-1}\n                      onClick={event =>\n                        this.change(event, \"registerCheckbox\", \"checkbox\")\n                      }\n                      checkedIcon={<Check className={classes.checkedIcon} />}\n                      icon={<Check className={classes.uncheckedIcon} />}\n                      classes={{\n                        checked: classes.checked,\n                        root: classes.checkRoot\n                      }}\n                    />\n                  }\n                  classes={{\n                    label:\n                      classes.label +\n                      (this.state.registerCheckboxState === \"error\"\n                        ? \" \" + classes.labelError\n                        : \"\")\n                  }}\n                  label=\"Subscribe to newsletter\"\n                />\n                <Button\n                  color=\"rose\"\n                  onClick={this.registerClick}\n                  className={classes.registerButton}\n                >\n                  Register\n                </Button>\n              </form>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={6}>\n          <Card>\n            <CardHeader color=\"rose\" icon>\n              <CardIcon color=\"rose\">\n                <Contacts />\n              </CardIcon>\n              <h4 className={classes.cardIconTitle}>Login Form</h4>\n            </CardHeader>\n            <CardBody>\n              <form>\n                <CustomInput\n                  success={this.state.loginEmailState === \"success\"}\n                  error={this.state.loginEmailState === \"error\"}\n                  labelText=\"Email Address *\"\n                  id=\"loginemail\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event =>\n                      this.change(event, \"loginEmail\", \"email\"),\n                    type: \"email\"\n                  }}\n                />\n                <CustomInput\n                  success={this.state.loginPasswordState === \"success\"}\n                  error={this.state.loginPasswordState === \"error\"}\n                  labelText=\"Password *\"\n                  id=\"loginpassword\"\n                  formControlProps={{\n                    fullWidth: true\n                  }}\n                  inputProps={{\n                    onChange: event =>\n                      this.change(event, \"loginPassword\", \"password\"),\n                    type: \"password\"\n                  }}\n                />\n                <div className={classes.formCategory}>\n                  <small>*</small> Required fields\n                </div>\n                <div className={classes.center}>\n                  <Button color=\"rose\" onClick={this.loginClick}>\n                    Login\n                  </Button>\n                </div>\n              </form>\n            </CardBody>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"rose\" text>\n              <CardText color=\"rose\">\n                <h4 className={classes.cardTitle}>Type Validation</h4>\n              </CardText>\n            </CardHeader>\n            <CardBody>\n              <form>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Required Text\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.requiredState === \"success\"}\n                      error={this.state.requiredState === \"error\"}\n                      id=\"required\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"required\", \"length\", 0),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.requiredState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>required</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Email\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.typeEmailState === \"success\"}\n                      error={this.state.typeEmailState === \"error\"}\n                      id=\"typeemail\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"typeEmail\", \"email\"),\n                        type: \"email\",\n                        endAdornment:\n                          this.state.typeEmailState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>email</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Number\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.numberState === \"success\"}\n                      error={this.state.numberState === \"error\"}\n                      id=\"number\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"number\", \"number\"),\n                        type: \"number\",\n                        endAdornment:\n                          this.state.numberState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>number</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Url\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.urlState === \"success\"}\n                      error={this.state.urlState === \"error\"}\n                      id=\"url\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event => this.change(event, \"url\", \"url\"),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.urlState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>url</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Equal to\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <CustomInput\n                      success={this.state.equalToState === \"success\"}\n                      error={this.state.equalToState === \"error\"}\n                      id=\"equalto\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event => this.change(event, \"whichEqualTo\"),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.equalToState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <CustomInput\n                      success={this.state.equalToState === \"success\"}\n                      error={this.state.equalToState === \"error\"}\n                      id=\"whichequalto\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(\n                            event,\n                            \"equalTo\",\n                            \"equalTo\",\n                            \"whichEqualTo\"\n                          ),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.equalToState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>equalTo</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n              </form>\n            </CardBody>\n            <CardFooter className={classes.justifyContentCenter}>\n              <Button color=\"rose\" onClick={this.typeClick}>\n                Validate Inputs\n              </Button>\n            </CardFooter>\n          </Card>\n        </GridItem>\n        <GridItem xs={12} sm={12} md={12}>\n          <Card>\n            <CardHeader color=\"rose\" text>\n              <CardText color=\"rose\">\n                <h4 className={classes.cardTitle}>Range Validation</h4>\n              </CardText>\n            </CardHeader>\n            <CardBody>\n              <form>\n                <GridContainer>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Min Length\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.minLengthState === \"success\"}\n                      error={this.state.minLengthState === \"error\"}\n                      id=\"minlength\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"minLength\", \"length\", 5),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.minLengthState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>minLength=\"5\"</code>\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Max Length\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.maxLengthState === \"success\"}\n                      error={this.state.maxLengthState === \"error\"}\n                      id=\"maxlength\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"maxLength\", \"max-length\", 5),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.maxLengthState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>maxLength=\"5\"</code>\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Range\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.rangeState === \"success\"}\n                      error={this.state.rangeState === \"error\"}\n                      id=\"range\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"range\", \"range\", 6, 10),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.rangeState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>range=\"[6,10]\"</code>\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Min Value\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.minValueState === \"success\"}\n                      error={this.state.minValueState === \"error\"}\n                      id=\"minvalue\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"minValue\", \"min-value\", 6),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.minValueState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>min=\"6\"</code>\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={2}>\n                    <FormLabel className={classes.labelHorizontal}>\n                      Max Value\n                    </FormLabel>\n                  </GridItem>\n                  <GridItem xs={12} sm={7}>\n                    <CustomInput\n                      success={this.state.maxValueState === \"success\"}\n                      error={this.state.maxValueState === \"error\"}\n                      id=\"maxvalue\"\n                      formControlProps={{\n                        fullWidth: true\n                      }}\n                      inputProps={{\n                        onChange: event =>\n                          this.change(event, \"maxValue\", \"max-value\", 6),\n                        type: \"text\",\n                        endAdornment:\n                          this.state.maxValueState === \"error\" ? (\n                            <InputAdornment position=\"end\">\n                              <Close className={classes.danger} />\n                            </InputAdornment>\n                          ) : (\n                            undefined\n                          )\n                      }}\n                    />\n                  </GridItem>\n                  <GridItem xs={12} sm={3}>\n                    <FormLabel className={classes.labelLeftHorizontal}>\n                      <code>max=\"6\"</code>\n                    </FormLabel>\n                  </GridItem>\n                </GridContainer>\n              </form>\n            </CardBody>\n            <CardFooter className={classes.justifyContentCenter}>\n              <Button color=\"rose\" onClick={this.rangeClick}>\n                Validate Inputs\n              </Button>\n            </CardFooter>\n          </Card>\n        </GridItem>\n      </GridContainer>\n    );\n  }\n}\n\nexport default withStyles(validationFormsStyle)(ValidationForms);\n"]},"metadata":{},"sourceType":"module"}