{"ast":null,"code":"import _defineProperty from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/layouts/Dashboard.jsx\";\nimport React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\"; // creates a beautiful scrollbar\n\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\nimport dashboardRoutes from \"routes/dashboard.jsx\";\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/dashboardStyle.jsx\";\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/logo-white.svg\";\nvar switchRoutes = React.createElement(Switch, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 25\n  },\n  __self: this\n}, dashboardRoutes.map(function (prop, key) {\n  if (prop.redirect) return React.createElement(Redirect, {\n    from: prop.path,\n    to: prop.pathTo,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n  if (prop.collapse) return prop.views.map(function (prop, key) {\n    return React.createElement(Route, {\n      path: prop.path,\n      component: prop.component,\n      key: key,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    });\n  });\n  return React.createElement(Route, {\n    path: prop.path,\n    component: prop.component,\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  });\n}));\nvar ps;\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard(props) {\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).call(this, props));\n\n    _this.handleDrawerToggle = function () {\n      _this.setState({\n        mobileOpen: !_this.state.mobileOpen\n      });\n    };\n\n    _this.state = {\n      mobileOpen: false,\n      miniActive: false\n    };\n    _this.resizeFunction = _this.resizeFunction.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps = new PerfectScrollbar(this.refs.mainPanel, {\n          suppressScrollX: true,\n          suppressScrollY: false\n        });\n        document.body.style.overflow = \"hidden\";\n      }\n\n      window.addEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (navigator.platform.indexOf(\"Win\") > -1) {\n        ps.destroy();\n      }\n\n      window.removeEventListener(\"resize\", this.resizeFunction);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(e) {\n      if (e.history.location.pathname !== e.location.pathname) {\n        this.refs.mainPanel.scrollTop = 0;\n\n        if (this.state.mobileOpen) {\n          this.setState({\n            mobileOpen: false\n          });\n        }\n      }\n    }\n  }, {\n    key: \"getRoute\",\n    value: function getRoute() {\n      return this.props.location.pathname !== \"/maps/full-screen-maps\";\n    }\n  }, {\n    key: \"sidebarMinimize\",\n    value: function sidebarMinimize() {\n      this.setState({\n        miniActive: !this.state.miniActive\n      });\n    }\n  }, {\n    key: \"resizeFunction\",\n    value: function resizeFunction() {\n      if (window.innerWidth >= 960) {\n        this.setState({\n          mobileOpen: false\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _cx;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          rest = _objectWithoutProperties(_this$props, [\"classes\"]);\n\n      var mainPanel = classes.mainPanel + \" \" + cx((_cx = {}, _defineProperty(_cx, classes.mainPanelSidebarMini, this.state.miniActive), _defineProperty(_cx, classes.mainPanelWithPerfectScrollbar, navigator.platform.indexOf(\"Win\") > -1), _cx));\n      return React.createElement(\"div\", {\n        className: classes.wrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(Sidebar, Object.assign({\n        routes: dashboardRoutes,\n        logoText: \"Creative Tim\",\n        logo: logo,\n        image: image,\n        handleDrawerToggle: this.handleDrawerToggle,\n        open: this.state.mobileOpen,\n        color: \"blue\",\n        bgColor: \"black\",\n        miniActive: this.state.miniActive\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: mainPanel,\n        ref: \"mainPanel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(Header, Object.assign({\n        sidebarMinimize: this.sidebarMinimize.bind(this),\n        miniActive: this.state.miniActive,\n        routes: dashboardRoutes,\n        handleDrawerToggle: this.handleDrawerToggle\n      }, rest, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), this.getRoute() ? React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, switchRoutes)) : React.createElement(\"div\", {\n        className: classes.map,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, switchRoutes), this.getRoute() ? React.createElement(Footer, {\n        fluid: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }) : null));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(appStyle)(Dashboard);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/layouts/Dashboard.jsx"],"names":["React","cx","PropTypes","Switch","Route","Redirect","PerfectScrollbar","withStyles","Header","Footer","Sidebar","dashboardRoutes","appStyle","image","switchRoutes","map","prop","key","redirect","path","pathTo","collapse","views","component","ps","Dashboard","props","handleDrawerToggle","setState","mobileOpen","state","miniActive","resizeFunction","bind","navigator","platform","indexOf","refs","mainPanel","suppressScrollX","suppressScrollY","document","body","style","overflow","window","addEventListener","destroy","removeEventListener","e","history","location","pathname","scrollTop","innerWidth","classes","rest","mainPanelSidebarMini","mainPanelWithPerfectScrollbar","wrapper","logo","sidebarMinimize","getRoute","content","container","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\n// creates a beautiful scrollbar\nimport PerfectScrollbar from \"perfect-scrollbar\";\nimport \"perfect-scrollbar/css/perfect-scrollbar.css\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// core components\nimport Header from \"components/Header/Header.jsx\";\nimport Footer from \"components/Footer/Footer.jsx\";\nimport Sidebar from \"components/Sidebar/Sidebar.jsx\";\n\nimport dashboardRoutes from \"routes/dashboard.jsx\";\n\nimport appStyle from \"assets/jss/material-dashboard-pro-react/layouts/dashboardStyle.jsx\";\n\nimport image from \"assets/img/sidebar-2.jpg\";\nimport logo from \"assets/img/logo-white.svg\";\n\nconst switchRoutes = (\n  <Switch>\n    {dashboardRoutes.map((prop, key) => {\n      if (prop.redirect)\n        return <Redirect from={prop.path} to={prop.pathTo} key={key} />;\n      if (prop.collapse)\n        return prop.views.map((prop, key) => {\n          return (\n            <Route path={prop.path} component={prop.component} key={key} />\n          );\n        });\n      return <Route path={prop.path} component={prop.component} key={key} />;\n    })}\n  </Switch>\n);\n\nvar ps;\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mobileOpen: false,\n      miniActive: false\n    };\n    this.resizeFunction = this.resizeFunction.bind(this);\n  }\n  componentDidMount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps = new PerfectScrollbar(this.refs.mainPanel, {\n        suppressScrollX: true,\n        suppressScrollY: false\n      });\n      document.body.style.overflow = \"hidden\";\n    }\n    window.addEventListener(\"resize\", this.resizeFunction);\n  }\n  componentWillUnmount() {\n    if (navigator.platform.indexOf(\"Win\") > -1) {\n      ps.destroy();\n    }\n    window.removeEventListener(\"resize\", this.resizeFunction);\n  }\n  componentDidUpdate(e) {\n    if (e.history.location.pathname !== e.location.pathname) {\n      this.refs.mainPanel.scrollTop = 0;\n      if (this.state.mobileOpen) {\n        this.setState({ mobileOpen: false });\n      }\n    }\n  }\n  handleDrawerToggle = () => {\n    this.setState({ mobileOpen: !this.state.mobileOpen });\n  };\n  getRoute() {\n    return this.props.location.pathname !== \"/maps/full-screen-maps\";\n  }\n  sidebarMinimize() {\n    this.setState({ miniActive: !this.state.miniActive });\n  }\n  resizeFunction() {\n    if (window.innerWidth >= 960) {\n      this.setState({ mobileOpen: false });\n    }\n  }\n  render() {\n    const { classes, ...rest } = this.props;\n    const mainPanel =\n      classes.mainPanel +\n      \" \" +\n      cx({\n        [classes.mainPanelSidebarMini]: this.state.miniActive,\n        [classes.mainPanelWithPerfectScrollbar]:\n          navigator.platform.indexOf(\"Win\") > -1\n      });\n    return (\n      <div className={classes.wrapper}>\n        <Sidebar\n          routes={dashboardRoutes}\n          logoText={\"Creative Tim\"}\n          logo={logo}\n          image={image}\n          handleDrawerToggle={this.handleDrawerToggle}\n          open={this.state.mobileOpen}\n          color=\"blue\"\n          bgColor=\"black\"\n          miniActive={this.state.miniActive}\n          {...rest}\n        />\n        <div className={mainPanel} ref=\"mainPanel\">\n          <Header\n            sidebarMinimize={this.sidebarMinimize.bind(this)}\n            miniActive={this.state.miniActive}\n            routes={dashboardRoutes}\n            handleDrawerToggle={this.handleDrawerToggle}\n            {...rest}\n          />\n          {/* On the /maps/full-screen-maps route we want the map to be on full screen - this is not possible if the content and conatiner classes are present because they have some paddings which would make the map smaller */}\n          {this.getRoute() ? (\n            <div className={classes.content}>\n              <div className={classes.container}>{switchRoutes}</div>\n            </div>\n          ) : (\n            <div className={classes.map}>{switchRoutes}</div>\n          )}\n          {this.getRoute() ? <Footer fluid /> : null}\n        </div>\n      </div>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(appStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}