{"ast":null,"code":"import _defineProperty from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Wizard/Wizard.jsx\";\nimport React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types'; // @material-ui/core components\n\nimport withStyles from '@material-ui/core/styles/withStyles'; // core components\n\nimport Button from 'components/CustomButtons/Button.jsx';\nimport Card from 'components/Card/Card.jsx';\nimport wizardStyle from 'assets/jss/material-dashboard-pro-react/components/wizardStyle.jsx';\n\nvar Wizard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Wizard, _React$Component);\n\n  function Wizard(props) {\n    var _this;\n\n    _classCallCheck(this, Wizard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Wizard).call(this, props));\n    var width;\n\n    if (_this.props.steps.length === 1) {\n      width = '100%';\n    } else {\n      if (window.innerWidth < 600) {\n        if (_this.props.steps.length !== 3) {\n          width = '50%';\n        } else {\n          width = 100 / 3 + '%';\n        }\n      } else {\n        if (_this.props.steps.length === 2) {\n          width = '50%';\n        } else {\n          width = 100 / 3 + '%';\n        }\n      }\n    }\n\n    _this.state = {\n      currentStep: 0,\n      color: _this.props.color,\n      nextButton: _this.props.steps.length > 1 ? true : false,\n      previousButton: false,\n      finishButton: _this.props.steps.length === 1 ? true : false,\n      width: width,\n      movingTabStyle: {\n        transition: 'transform 0s'\n      },\n      allStates: {}\n    };\n    _this.navigationStepChange = _this.navigationStepChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.refreshAnimation = _this.refreshAnimation.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.previousButtonClick = _this.previousButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.previousButtonClick = _this.previousButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.finishButtonClick = _this.finishButtonClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.updateWidth = _this.updateWidth.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(Wizard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.refreshAnimation(0);\n      window.addEventListener('resize', this.updateWidth);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      window.removeEventListener('resize', this.updateWidth);\n    }\n  }, {\n    key: \"updateWidth\",\n    value: function updateWidth() {\n      this.refreshAnimation(this.state.currentStep);\n    }\n  }, {\n    key: \"navigationStepChange\",\n    value: function navigationStepChange(key) {\n      if (this.props.steps) {\n        var validationState = true;\n\n        if (key > this.state.currentStep) {\n          for (var i = this.state.currentStep; i < key; i++) {\n            if (this[this.props.steps[i].stepId].sendState !== undefined) {\n              this.setState({\n                allStates: _toConsumableArray(this.state.allStates).concat([_defineProperty({}, this.props.steps[i].stepId, this[this.props.steps[i].stepId].sendState())])\n              });\n            }\n\n            if (this[this.props.steps[i].stepId].isValidated !== undefined && this[this.props.steps[i].stepId].isValidated() === false) {\n              validationState = false;\n              break;\n            }\n          }\n        }\n\n        if (validationState) {\n          this.setState({\n            currentStep: key,\n            nextButton: this.props.steps.length > key + 1 ? true : false,\n            previousButton: key > 0 ? true : false,\n            finishButton: this.props.steps.length === key + 1 ? true : false\n          });\n          this.refreshAnimation(key);\n        }\n      }\n    }\n  }, {\n    key: \"nextButtonClick\",\n    value: function nextButtonClick() {\n      if (this.props.validate && (this[this.props.steps[this.state.currentStep].stepId].isValidated !== undefined && this[this.props.steps[this.state.currentStep].stepId].isValidated() || this[this.props.steps[this.state.currentStep].stepId].isValidated === undefined) || this.props.validate === undefined) {\n        if (this[this.props.steps[this.state.currentStep].stepId].sendState !== undefined) {\n          this.setState({\n            allStates: _toConsumableArray(this.state.allStates).concat([_defineProperty({}, this.props.steps[this.state.currentStep].stepId, this[this.props.steps[this.state.currentStep].stepId].sendState())])\n          });\n        }\n\n        var key = this.state.currentStep + 1;\n        this.setState({\n          currentStep: key,\n          nextButton: this.props.steps.length > key + 1 ? true : false,\n          previousButton: key > 0 ? true : false,\n          finishButton: this.props.steps.length === key + 1 ? true : false\n        });\n        this.refreshAnimation(key);\n      }\n    }\n  }, {\n    key: \"previousButtonClick\",\n    value: function previousButtonClick() {\n      if (this[this.props.steps[this.state.currentStep].stepId].sendState !== undefined) {\n        this.setState({\n          allStates: _toConsumableArray(this.state.allStates).concat([_defineProperty({}, this.props.steps[this.state.currentStep].stepId, this[this.props.steps[this.state.currentStep].stepId].sendState())])\n        });\n      }\n\n      var key = this.state.currentStep - 1;\n\n      if (key >= 0) {\n        this.setState({\n          currentStep: key,\n          nextButton: this.props.steps.length > key + 1 ? true : false,\n          previousButton: key > 0 ? true : false,\n          finishButton: this.props.steps.length === key + 1 ? true : false\n        });\n        this.refreshAnimation(key);\n      }\n    }\n  }, {\n    key: \"finishButtonClick\",\n    value: function finishButtonClick() {\n      if (this.props.validate && (this[this.props.steps[this.state.currentStep].stepId].isValidated !== undefined && this[this.props.steps[this.state.currentStep].stepId].isValidated() || this[this.props.steps[this.state.currentStep].stepId].isValidated === undefined) && this.props.finishButtonClick !== undefined) {\n        this.props.finishButtonClick();\n      }\n    }\n  }, {\n    key: \"refreshAnimation\",\n    value: function refreshAnimation(index) {\n      var total = this.props.steps.length;\n      var li_width = 100 / total;\n      var total_steps = this.props.steps.length;\n      var move_distance = this.refs.wizard.children[0].offsetWidth / total_steps;\n      var index_temp = index;\n      var vertical_level = 0;\n      var mobile_device = window.innerWidth < 600 && total > 3;\n\n      if (mobile_device) {\n        move_distance = this.refs.wizard.children[0].offsetWidth / 2;\n        index_temp = index % 2;\n        li_width = 50;\n      }\n\n      this.setState({\n        width: li_width + '%'\n      });\n      var step_width = move_distance;\n      move_distance = move_distance * index_temp;\n      var current = index + 1;\n\n      if (current === 1 || mobile_device === true && index % 2 === 0) {\n        move_distance -= 8;\n      } else if (current === total_steps || mobile_device === true && index % 2 === 1) {\n        move_distance += 8;\n      }\n\n      if (mobile_device) {\n        vertical_level = parseInt(index / 2, 10);\n        vertical_level = vertical_level * 38;\n      }\n\n      var movingTabStyle = {\n        width: step_width,\n        transform: 'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',\n        transition: 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)'\n      };\n      this.setState({\n        movingTabStyle: movingTabStyle\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          title = _this$props.title,\n          subtitle = _this$props.subtitle,\n          color = _this$props.color,\n          steps = _this$props.steps;\n      return React.createElement(\"div\", {\n        className: classes.wizardContainer,\n        ref: \"wizard\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Card, {\n        className: classes.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.wizardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: classes.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, title), React.createElement(\"h5\", {\n        className: classes.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, subtitle)), React.createElement(\"div\", {\n        className: classes.wizardNavigation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        className: classes.nav,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231\n        },\n        __self: this\n      }, steps.map(function (prop, key) {\n        return React.createElement(\"li\", {\n          className: classes.steps,\n          key: key,\n          style: {\n            width: _this2.state.width\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: classes.stepsAnchor,\n          onClick: function onClick() {\n            return _this2.navigationStepChange(key);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, prop.stepName));\n      })), React.createElement(\"div\", {\n        className: classes.movingTab + ' ' + classes[color],\n        style: this.state.movingTabStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      }, steps[this.state.currentStep].stepName)), React.createElement(\"div\", {\n        className: classes.content,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, steps.map(function (prop, key) {\n        var _cx;\n\n        var stepContentClasses = cx((_cx = {}, _defineProperty(_cx, classes.stepContentActive, _this2.state.currentStep === key), _defineProperty(_cx, classes.stepContent, _this2.state.currentStep !== key), _cx));\n        return React.createElement(\"div\", {\n          className: stepContentClasses,\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263\n          },\n          __self: this\n        }, React.createElement(prop.stepComponent, {\n          innerRef: function innerRef(node) {\n            return _this2[prop.stepId] = node;\n          },\n          allStates: _this2.state.allStates,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 264\n          },\n          __self: this\n        }));\n      })), React.createElement(\"div\", {\n        className: classes.footer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.left,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, this.state.previousButton ? React.createElement(Button, {\n        className: this.props.previousButtonClasses,\n        onClick: function onClick() {\n          return _this2.previousButtonClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, this.props.previousButtonText) : null), React.createElement(\"div\", {\n        className: classes.right,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 283\n        },\n        __self: this\n      }, this.state.nextButton ? React.createElement(Button, {\n        color: \"rose\",\n        className: this.props.nextButtonClasses,\n        onClick: function onClick() {\n          return _this2.nextButtonClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      }, this.props.nextButtonText) : null, this.state.finishButton ? React.createElement(Button, {\n        color: \"rose\",\n        className: this.finishButtonClasses,\n        onClick: function onClick() {\n          return _this2.finishButtonClick();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 294\n        },\n        __self: this\n      }, this.props.finishButtonText) : null), React.createElement(\"div\", {\n        className: classes.clearfix,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 303\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Wizard;\n}(React.Component);\n\nWizard.defaultProps = {\n  color: 'rose',\n  title: 'Here should go your title',\n  subtitle: 'And this would be your subtitle',\n  previousButtonText: 'Previous',\n  previousButtonClasses: '',\n  nextButtonClasses: '',\n  nextButtonText: 'Next',\n  finishButtonClasses: '',\n  finishButtonText: 'Finish'\n};\nWizard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  steps: PropTypes.arrayOf(PropTypes.shape({\n    stepName: PropTypes.string.isRequired,\n    stepComponent: PropTypes.func.isRequired,\n    stepId: PropTypes.string.isRequired\n  })).isRequired,\n  color: PropTypes.oneOf(['primary', 'warning', 'danger', 'success', 'info', 'rose']),\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  previousButtonClasses: PropTypes.string,\n  previousButtonText: PropTypes.string,\n  nextButtonClasses: PropTypes.string,\n  nextButtonText: PropTypes.string,\n  finishButtonClasses: PropTypes.string,\n  finishButtonText: PropTypes.string,\n  finishButtonClick: PropTypes.func,\n  validate: PropTypes.bool\n};\nexport default withStyles(wizardStyle)(Wizard);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Wizard/Wizard.jsx"],"names":["React","cx","PropTypes","withStyles","Button","Card","wizardStyle","Wizard","props","width","steps","length","window","innerWidth","state","currentStep","color","nextButton","previousButton","finishButton","movingTabStyle","transition","allStates","navigationStepChange","bind","refreshAnimation","previousButtonClick","finishButtonClick","updateWidth","addEventListener","removeEventListener","key","validationState","i","stepId","sendState","undefined","setState","isValidated","validate","index","total","li_width","total_steps","move_distance","refs","wizard","children","offsetWidth","index_temp","vertical_level","mobile_device","step_width","current","parseInt","transform","classes","title","subtitle","wizardContainer","card","wizardHeader","wizardNavigation","nav","map","prop","stepsAnchor","stepName","movingTab","content","stepContentClasses","stepContentActive","stepContent","node","footer","left","previousButtonClasses","previousButtonText","right","nextButtonClasses","nextButtonClick","nextButtonText","finishButtonClasses","finishButtonText","clearfix","Component","defaultProps","propTypes","object","isRequired","arrayOf","shape","string","stepComponent","func","oneOf","bool"],"mappings":"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","sourcesContent":["import React from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\n// @material-ui/core components\nimport withStyles from '@material-ui/core/styles/withStyles';\n// core components\nimport Button from 'components/CustomButtons/Button.jsx';\nimport Card from 'components/Card/Card.jsx';\n\nimport wizardStyle from 'assets/jss/material-dashboard-pro-react/components/wizardStyle.jsx';\n\nclass Wizard extends React.Component {\n  constructor(props) {\n    super(props);\n    var width;\n    if (this.props.steps.length === 1) {\n      width = '100%';\n    } else {\n      if (window.innerWidth < 600) {\n        if (this.props.steps.length !== 3) {\n          width = '50%';\n        } else {\n          width = 100 / 3 + '%';\n        }\n      } else {\n        if (this.props.steps.length === 2) {\n          width = '50%';\n        } else {\n          width = 100 / 3 + '%';\n        }\n      }\n    }\n    this.state = {\n      currentStep: 0,\n      color: this.props.color,\n      nextButton: this.props.steps.length > 1 ? true : false,\n      previousButton: false,\n      finishButton: this.props.steps.length === 1 ? true : false,\n      width: width,\n      movingTabStyle: {\n        transition: 'transform 0s',\n      },\n      allStates: {},\n    };\n    this.navigationStepChange = this.navigationStepChange.bind(this);\n    this.refreshAnimation = this.refreshAnimation.bind(this);\n    this.previousButtonClick = this.previousButtonClick.bind(this);\n    this.previousButtonClick = this.previousButtonClick.bind(this);\n    this.finishButtonClick = this.finishButtonClick.bind(this);\n    this.updateWidth = this.updateWidth.bind(this);\n  }\n  componentDidMount() {\n    this.refreshAnimation(0);\n    window.addEventListener('resize', this.updateWidth);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('resize', this.updateWidth);\n  }\n  updateWidth() {\n    this.refreshAnimation(this.state.currentStep);\n  }\n  navigationStepChange(key) {\n    if (this.props.steps) {\n      var validationState = true;\n      if (key > this.state.currentStep) {\n        for (var i = this.state.currentStep; i < key; i++) {\n          if (this[this.props.steps[i].stepId].sendState !== undefined) {\n            this.setState({\n              allStates: [\n                ...this.state.allStates,\n                {\n                  [this.props.steps[i].stepId]: this[\n                    this.props.steps[i].stepId\n                  ].sendState(),\n                },\n              ],\n            });\n          }\n          if (\n            this[this.props.steps[i].stepId].isValidated !== undefined &&\n            this[this.props.steps[i].stepId].isValidated() === false\n          ) {\n            validationState = false;\n            break;\n          }\n        }\n      }\n      if (validationState) {\n        this.setState({\n          currentStep: key,\n          nextButton: this.props.steps.length > key + 1 ? true : false,\n          previousButton: key > 0 ? true : false,\n          finishButton: this.props.steps.length === key + 1 ? true : false,\n        });\n        this.refreshAnimation(key);\n      }\n    }\n  }\n  nextButtonClick() {\n    if (\n      (this.props.validate &&\n        ((this[this.props.steps[this.state.currentStep].stepId].isValidated !==\n          undefined &&\n          this[\n            this.props.steps[this.state.currentStep].stepId\n          ].isValidated()) ||\n          this[this.props.steps[this.state.currentStep].stepId].isValidated ===\n            undefined)) ||\n      this.props.validate === undefined\n    ) {\n      if (\n        this[this.props.steps[this.state.currentStep].stepId].sendState !==\n        undefined\n      ) {\n        this.setState({\n          allStates: [\n            ...this.state.allStates,\n            {\n              [this.props.steps[this.state.currentStep].stepId]: this[\n                this.props.steps[this.state.currentStep].stepId\n              ].sendState(),\n            },\n          ],\n        });\n      }\n      var key = this.state.currentStep + 1;\n      this.setState({\n        currentStep: key,\n        nextButton: this.props.steps.length > key + 1 ? true : false,\n        previousButton: key > 0 ? true : false,\n        finishButton: this.props.steps.length === key + 1 ? true : false,\n      });\n      this.refreshAnimation(key);\n    }\n  }\n  previousButtonClick() {\n    if (\n      this[this.props.steps[this.state.currentStep].stepId].sendState !==\n      undefined\n    ) {\n      this.setState({\n        allStates: [\n          ...this.state.allStates,\n          {\n            [this.props.steps[this.state.currentStep].stepId]: this[\n              this.props.steps[this.state.currentStep].stepId\n            ].sendState(),\n          },\n        ],\n      });\n    }\n    var key = this.state.currentStep - 1;\n    if (key >= 0) {\n      this.setState({\n        currentStep: key,\n        nextButton: this.props.steps.length > key + 1 ? true : false,\n        previousButton: key > 0 ? true : false,\n        finishButton: this.props.steps.length === key + 1 ? true : false,\n      });\n      this.refreshAnimation(key);\n    }\n  }\n  finishButtonClick() {\n    if (\n      this.props.validate &&\n      ((this[this.props.steps[this.state.currentStep].stepId].isValidated !==\n        undefined &&\n        this[this.props.steps[this.state.currentStep].stepId].isValidated()) ||\n        this[this.props.steps[this.state.currentStep].stepId].isValidated ===\n          undefined) &&\n      this.props.finishButtonClick !== undefined\n    ) {\n      this.props.finishButtonClick();\n    }\n  }\n  refreshAnimation(index) {\n    var total = this.props.steps.length;\n    var li_width = 100 / total;\n    var total_steps = this.props.steps.length;\n    var move_distance = this.refs.wizard.children[0].offsetWidth / total_steps;\n    var index_temp = index;\n    var vertical_level = 0;\n\n    var mobile_device = window.innerWidth < 600 && total > 3;\n\n    if (mobile_device) {\n      move_distance = this.refs.wizard.children[0].offsetWidth / 2;\n      index_temp = index % 2;\n      li_width = 50;\n    }\n\n    this.setState({ width: li_width + '%' });\n\n    var step_width = move_distance;\n    move_distance = move_distance * index_temp;\n\n    var current = index + 1;\n\n    if (current === 1 || (mobile_device === true && index % 2 === 0)) {\n      move_distance -= 8;\n    } else if (\n      current === total_steps ||\n      (mobile_device === true && index % 2 === 1)\n    ) {\n      move_distance += 8;\n    }\n\n    if (mobile_device) {\n      vertical_level = parseInt(index / 2, 10);\n      vertical_level = vertical_level * 38;\n    }\n    var movingTabStyle = {\n      width: step_width,\n      transform:\n        'translate3d(' + move_distance + 'px, ' + vertical_level + 'px, 0)',\n      transition: 'all 0.5s cubic-bezier(0.29, 1.42, 0.79, 1)',\n    };\n    this.setState({ movingTabStyle: movingTabStyle });\n  }\n  render() {\n    const { classes, title, subtitle, color, steps } = this.props;\n    return (\n      <div className={classes.wizardContainer} ref=\"wizard\">\n        <Card className={classes.card}>\n          <div className={classes.wizardHeader}>\n            <h3 className={classes.title}>{title}</h3>\n            <h5 className={classes.subtitle}>{subtitle}</h5>\n          </div>\n          <div className={classes.wizardNavigation}>\n            <ul className={classes.nav}>\n              {steps.map((prop, key) => {\n                return (\n                  <li\n                    className={classes.steps}\n                    key={key}\n                    style={{ width: this.state.width }}\n                  >\n                    <button\n                      className={classes.stepsAnchor}\n                      onClick={() => this.navigationStepChange(key)}\n                    >\n                      {prop.stepName}\n                    </button>\n                  </li>\n                );\n              })}\n            </ul>\n            <div\n              className={classes.movingTab + ' ' + classes[color]}\n              style={this.state.movingTabStyle}\n            >\n              {steps[this.state.currentStep].stepName}\n            </div>\n          </div>\n          <div className={classes.content}>\n            {steps.map((prop, key) => {\n              const stepContentClasses = cx({\n                [classes.stepContentActive]: this.state.currentStep === key,\n                [classes.stepContent]: this.state.currentStep !== key,\n              });\n              return (\n                <div className={stepContentClasses} key={key}>\n                  <prop.stepComponent\n                    innerRef={node => (this[prop.stepId] = node)}\n                    allStates={this.state.allStates}\n                  />\n                </div>\n              );\n            })}\n          </div>\n          <div className={classes.footer}>\n            <div className={classes.left}>\n              {this.state.previousButton ? (\n                <Button\n                  className={this.props.previousButtonClasses}\n                  onClick={() => this.previousButtonClick()}\n                >\n                  {this.props.previousButtonText}\n                </Button>\n              ) : null}\n            </div>\n            <div className={classes.right}>\n              {this.state.nextButton ? (\n                <Button\n                  color=\"rose\"\n                  className={this.props.nextButtonClasses}\n                  onClick={() => this.nextButtonClick()}\n                >\n                  {this.props.nextButtonText}\n                </Button>\n              ) : null}\n              {this.state.finishButton ? (\n                <Button\n                  color=\"rose\"\n                  className={this.finishButtonClasses}\n                  onClick={() => this.finishButtonClick()}\n                >\n                  {this.props.finishButtonText}\n                </Button>\n              ) : null}\n            </div>\n            <div className={classes.clearfix} />\n          </div>\n        </Card>\n      </div>\n    );\n  }\n}\n\nWizard.defaultProps = {\n  color: 'rose',\n  title: 'Here should go your title',\n  subtitle: 'And this would be your subtitle',\n  previousButtonText: 'Previous',\n  previousButtonClasses: '',\n  nextButtonClasses: '',\n  nextButtonText: 'Next',\n  finishButtonClasses: '',\n  finishButtonText: 'Finish',\n};\n\nWizard.propTypes = {\n  classes: PropTypes.object.isRequired,\n  steps: PropTypes.arrayOf(\n    PropTypes.shape({\n      stepName: PropTypes.string.isRequired,\n      stepComponent: PropTypes.func.isRequired,\n      stepId: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n  color: PropTypes.oneOf([\n    'primary',\n    'warning',\n    'danger',\n    'success',\n    'info',\n    'rose',\n  ]),\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  previousButtonClasses: PropTypes.string,\n  previousButtonText: PropTypes.string,\n  nextButtonClasses: PropTypes.string,\n  nextButtonText: PropTypes.string,\n  finishButtonClasses: PropTypes.string,\n  finishButtonText: PropTypes.string,\n  finishButtonClick: PropTypes.func,\n  validate: PropTypes.bool,\n};\n\nexport default withStyles(wizardStyle)(Wizard);\n"]},"metadata":{},"sourceType":"module"}