{"ast":null,"code":"import _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Pages/LockScreenPage.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\"; // core components\n\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardAvatar from \"components/Card/CardAvatar.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport avatar from \"assets/img/faces/avatar.jpg\";\nimport lockScreenPageStyle from \"assets/jss/material-dashboard-pro-react/views/lockScreenPageStyle.jsx\";\n\nvar LockScreenPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(LockScreenPage, _React$Component);\n\n  function LockScreenPage(props) {\n    var _this;\n\n    _classCallCheck(this, LockScreenPage);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(LockScreenPage).call(this, props)); // we use this to make the card to appear after the page has been rendered\n\n    _this.state = {\n      cardAnimaton: \"cardHidden\"\n    };\n    return _this;\n  }\n\n  _createClass(LockScreenPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n      this.timeOutFunction = setTimeout(function () {\n        this.setState({\n          cardAnimaton: \"\"\n        });\n      }.bind(this), 700);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearTimeout(this.timeOutFunction);\n      this.timeOutFunction = null;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        className: classes.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Card, {\n        profile: true,\n        className: classes.customCardClass + \" \" + classes[this.state.cardAnimaton],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, React.createElement(CardAvatar, {\n        profile: true,\n        className: classes.cardAvatar,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: avatar,\n        alt: \"...\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }))), React.createElement(CardBody, {\n        profile: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"Tania Andrew\"), React.createElement(CustomInput, {\n        labelText: \"Enter Password\",\n        id: \"company-disabled\",\n        formControlProps: {\n          fullWidth: true\n        },\n        inputProps: {\n          type: \"password\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })), React.createElement(CardFooter, {\n        className: classes.justifyContentCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"rose\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"Unlock\")))));\n    }\n  }]);\n\n  return LockScreenPage;\n}(React.Component);\n\nLockScreenPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(lockScreenPageStyle)(LockScreenPage);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Pages/LockScreenPage.jsx"],"names":["React","PropTypes","withStyles","Button","CustomInput","Card","CardBody","CardAvatar","CardFooter","avatar","lockScreenPageStyle","LockScreenPage","props","state","cardAnimaton","timeOutFunction","setTimeout","setState","bind","clearTimeout","classes","container","customCardClass","cardAvatar","e","preventDefault","cardTitle","fullWidth","type","justifyContentCenter","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\n// core components\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport CustomInput from \"components/CustomInput/CustomInput.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardAvatar from \"components/Card/CardAvatar.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\n\nimport avatar from \"assets/img/faces/avatar.jpg\";\n\nimport lockScreenPageStyle from \"assets/jss/material-dashboard-pro-react/views/lockScreenPageStyle.jsx\";\n\nclass LockScreenPage extends React.Component {\n  constructor(props) {\n    super(props);\n    // we use this to make the card to appear after the page has been rendered\n    this.state = {\n      cardAnimaton: \"cardHidden\"\n    };\n  }\n  componentDidMount() {\n    // we add a hidden class to the card and after 700 ms we delete it and the transition appears\n    this.timeOutFunction = setTimeout(\n      function() {\n        this.setState({ cardAnimaton: \"\" });\n      }.bind(this),\n      700\n    );\n  }\n  componentWillUnmount() {\n    clearTimeout(this.timeOutFunction);\n    this.timeOutFunction = null;\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div className={classes.container}>\n        <form>\n          <Card\n            profile\n            className={\n              classes.customCardClass + \" \" + classes[this.state.cardAnimaton]\n            }\n          >\n            <CardAvatar profile className={classes.cardAvatar}>\n              <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                <img src={avatar} alt=\"...\" />\n              </a>\n            </CardAvatar>\n            <CardBody profile>\n              <h4 className={classes.cardTitle}>Tania Andrew</h4>\n              <CustomInput\n                labelText=\"Enter Password\"\n                id=\"company-disabled\"\n                formControlProps={{\n                  fullWidth: true\n                }}\n                inputProps={{\n                  type: \"password\"\n                }}\n              />\n            </CardBody>\n            <CardFooter className={classes.justifyContentCenter}>\n              <Button color=\"rose\" round>\n                Unlock\n              </Button>\n            </CardFooter>\n          </Card>\n        </form>\n      </div>\n    );\n  }\n}\n\nLockScreenPage.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(lockScreenPageStyle)(LockScreenPage);\n"]},"metadata":{},"sourceType":"module"}