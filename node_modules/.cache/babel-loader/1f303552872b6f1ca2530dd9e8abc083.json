{"ast":null,"code":"import _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/pages/Dashboard.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ChartistGraph from \"react-chartist\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Store from \"@material-ui/icons/Store\";\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Refresh from \"@material-ui/icons/Refresh\";\nimport Edit from \"@material-ui/icons/Edit\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Wrapper from \"../layouts/Dashboard\";\nimport { dailySalesChart, emailsSubscriptionChart, completedTasksChart, multipleBarsChart } from \"variables/charts\";\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle\";\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Dashboard, _React$Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      value: 0\n    };\n\n    _this.handleChange = function (event, value) {\n      _this.setState({\n        value: value\n      });\n    };\n\n    _this.handleChangeIndex = function (index) {\n      _this.setState({\n        value: index\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"render\",\n    value: function render() {\n      var classes = this.props.classes;\n      return React.createElement(Wrapper, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 6,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"warning\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \"person\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Active Employees\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"49\")), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        href: \"#pablo\",\n        onClick: function onClick(e) {\n          return e.preventDefault();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Active Employees\"))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 6,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"success\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"calendar_today\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Next Payroll Date\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Mon, Jan 10\")), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"Next Payroll Date\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 6,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, \"attach_money\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, \"Total Cash Last Payroll\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, \"$4533.25\")), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, \"Total Cash Last Payroll\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 6,\n        md: 6,\n        lg: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        stats: true,\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"av_timer\")), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, \"Total Hours Last Payroll\"), React.createElement(\"h3\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"23\")), React.createElement(CardFooter, {\n        stats: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, \"Total Hours Last Payroll\"))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"rose\",\n        icon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(CardIcon, {\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(Timeline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.cardIconTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Multiple Bars Chart \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, \"- Bar Chart\"))), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        data: multipleBarsChart.data,\n        type: \"Bar\",\n        options: multipleBarsChart.options,\n        listener: multipleBarsChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }))))), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        className: classes.cardHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"info\",\n        className: classes.cardHeaderHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart-white-colors\",\n        data: dailySalesChart.data,\n        type: \"Line\",\n        options: dailySalesChart.options,\n        listener: dailySalesChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHoverUnder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Refresh\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Button, {\n        simple: true,\n        color: \"info\",\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(Refresh, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Change Date\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"transparent\",\n        simple: true,\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      })))), React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"Daily Sales\"), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: classes.successText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, React.createElement(ArrowUpward, {\n        className: classes.upArrowCardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), \" \", \"55%\"), \" \", \"increase in today sales.\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }), \" updated 4 minutes ago\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        className: classes.cardHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"warning\",\n        className: classes.cardHeaderHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart-white-colors\",\n        data: emailsSubscriptionChart.data,\n        type: \"Bar\",\n        options: emailsSubscriptionChart.options,\n        responsiveOptions: emailsSubscriptionChart.responsiveOptions,\n        listener: emailsSubscriptionChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHoverUnder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Refresh\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, React.createElement(Button, {\n        simple: true,\n        color: \"info\",\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Refresh, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Change Date\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"transparent\",\n        simple: true,\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225\n        },\n        __self: this\n      })))), React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, \"Email Subscriptions\"), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Last Campaign Performance\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }), \" campaign sent 2 days ago\")))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Card, {\n        chart: true,\n        className: classes.cardHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, React.createElement(CardHeader, {\n        color: \"danger\",\n        className: classes.cardHeaderHover,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243\n        },\n        __self: this\n      }, React.createElement(ChartistGraph, {\n        className: \"ct-chart-white-colors\",\n        data: completedTasksChart.data,\n        type: \"Line\",\n        options: completedTasksChart.options,\n        listener: completedTasksChart.animation,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 244\n        },\n        __self: this\n      })), React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHoverUnder,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Refresh\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(Button, {\n        simple: true,\n        color: \"info\",\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(Refresh, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }))), React.createElement(Tooltip, {\n        id: \"tooltip-top\",\n        title: \"Change Date\",\n        placement: \"bottom\",\n        classes: {\n          tooltip: classes.tooltip\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"transparent\",\n        simple: true,\n        justIcon: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 270\n        },\n        __self: this\n      }, React.createElement(Edit, {\n        className: classes.underChartIcons,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      })))), React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 275\n        },\n        __self: this\n      }, \"Completed Tasks\"), React.createElement(\"p\", {\n        className: classes.cardCategory,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 276\n        },\n        __self: this\n      }, \"Last Campaign Performance\")), React.createElement(CardFooter, {\n        chart: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }, React.createElement(AccessTime, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 282\n        },\n        __self: this\n      }), \" campaign sent 2 days ago\")))))));\n    }\n  }]);\n\n  return Dashboard;\n}(React.Component);\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(dashboardStyle)(Dashboard);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/pages/Dashboard.jsx"],"names":["React","PropTypes","ChartistGraph","withStyles","Tooltip","Icon","Store","Timeline","Warning","DateRange","LocalOffer","Update","ArrowUpward","AccessTime","Refresh","Edit","GridContainer","GridItem","Button","Danger","Card","CardHeader","CardIcon","CardBody","CardFooter","Wrapper","dailySalesChart","emailsSubscriptionChart","completedTasksChart","multipleBarsChart","dashboardStyle","Dashboard","state","value","handleChange","event","setState","handleChangeIndex","index","classes","props","cardCategory","cardTitle","stats","e","preventDefault","cardIconTitle","data","options","animation","cardHover","cardHeaderHover","cardHoverUnder","tooltip","underChartIcons","successText","upArrowCardCategory","responsiveOptions","Component","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ChartistGraph from \"react-chartist\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Icon from \"@material-ui/core/Icon\";\nimport Store from \"@material-ui/icons/Store\";\nimport Timeline from \"@material-ui/icons/Timeline\";\nimport Warning from \"@material-ui/icons/Warning\";\nimport DateRange from \"@material-ui/icons/DateRange\";\nimport LocalOffer from \"@material-ui/icons/LocalOffer\";\nimport Update from \"@material-ui/icons/Update\";\nimport ArrowUpward from \"@material-ui/icons/ArrowUpward\";\nimport AccessTime from \"@material-ui/icons/AccessTime\";\nimport Refresh from \"@material-ui/icons/Refresh\";\nimport Edit from \"@material-ui/icons/Edit\";\n\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Danger from \"components/Typography/Danger.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardHeader from \"components/Card/CardHeader.jsx\";\nimport CardIcon from \"components/Card/CardIcon.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport CardFooter from \"components/Card/CardFooter.jsx\";\nimport Wrapper from \"../layouts/Dashboard\";\nimport {\n  dailySalesChart,\n  emailsSubscriptionChart,\n  completedTasksChart,\n  multipleBarsChart\n} from \"variables/charts\";\n\nimport dashboardStyle from \"assets/jss/material-dashboard-pro-react/views/dashboardStyle\";\n\nclass Dashboard extends React.Component {\n  state = {\n    value: 0\n  };\n  handleChange = (event, value) => {\n    this.setState({ value });\n  };\n  handleChangeIndex = index => {\n    this.setState({ value: index });\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <Wrapper>\n        <div>\n          <GridContainer>\n            <GridItem xs={12} sm={6} md={6} lg={3}>\n              <Card>\n                <CardHeader color=\"warning\" stats icon>\n                  <CardIcon color=\"warning\">\n                    <Icon>person</Icon>\n                  </CardIcon>\n                  <p className={classes.cardCategory}>Active Employees</p>\n                  <h3 className={classes.cardTitle}>49</h3>\n                </CardHeader>\n                <CardFooter stats>\n                  <div className={classes.stats}>\n                    <a href=\"#pablo\" onClick={e => e.preventDefault()}>\n                      Active Employees\n                    </a>\n                  </div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem xs={12} sm={6} md={6} lg={3}>\n              <Card>\n                <CardHeader color=\"success\" stats icon>\n                  <CardIcon color=\"success\">\n                    <Icon>calendar_today</Icon>\n                  </CardIcon>\n                  <p className={classes.cardCategory}>Next Payroll Date</p>\n                  <h3 className={classes.cardTitle}>Mon, Jan 10</h3>\n                </CardHeader>\n                <CardFooter stats>\n                  <div className={classes.stats}>Next Payroll Date</div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem xs={12} sm={6} md={6} lg={3}>\n              <Card>\n                <CardHeader color=\"danger\" stats icon>\n                  <CardIcon color=\"danger\">\n                    <Icon>attach_money</Icon>\n                  </CardIcon>\n                  <p className={classes.cardCategory}>\n                    Total Cash Last Payroll\n                  </p>\n                  <h3 className={classes.cardTitle}>$4533.25</h3>\n                </CardHeader>\n                <CardFooter stats>\n                  <div className={classes.stats}>Total Cash Last Payroll</div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem xs={12} sm={6} md={6} lg={3}>\n              <Card>\n                <CardHeader color=\"info\" stats icon>\n                  <CardIcon color=\"info\">\n                    <Icon>av_timer</Icon>\n                  </CardIcon>\n                  <p className={classes.cardCategory}>\n                    Total Hours Last Payroll\n                  </p>\n                  <h3 className={classes.cardTitle}>23</h3>\n                </CardHeader>\n                <CardFooter stats>\n                  <div className={classes.stats}>Total Hours Last Payroll</div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n          </GridContainer>\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={12}>\n              <Card>\n                <CardHeader color=\"rose\" icon>\n                  <CardIcon color=\"rose\">\n                    <Timeline />\n                  </CardIcon>\n                  <h4 className={classes.cardIconTitle}>\n                    Multiple Bars Chart <small>- Bar Chart</small>\n                  </h4>\n                </CardHeader>\n                <CardBody>\n                  <ChartistGraph\n                    data={multipleBarsChart.data}\n                    type=\"Bar\"\n                    options={multipleBarsChart.options}\n                    listener={multipleBarsChart.animation}\n                  />\n                </CardBody>\n              </Card>\n            </GridItem>\n          </GridContainer>\n\n          <GridContainer>\n            <GridItem xs={12} sm={12} md={4}>\n              <Card chart className={classes.cardHover}>\n                <CardHeader color=\"info\" className={classes.cardHeaderHover}>\n                  <ChartistGraph\n                    className=\"ct-chart-white-colors\"\n                    data={dailySalesChart.data}\n                    type=\"Line\"\n                    options={dailySalesChart.options}\n                    listener={dailySalesChart.animation}\n                  />\n                </CardHeader>\n                <CardBody>\n                  <div className={classes.cardHoverUnder}>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Refresh\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button simple color=\"info\" justIcon>\n                        <Refresh className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Change Date\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button color=\"transparent\" simple justIcon>\n                        <Edit className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                  </div>\n                  <h4 className={classes.cardTitle}>Daily Sales</h4>\n                  <p className={classes.cardCategory}>\n                    <span className={classes.successText}>\n                      <ArrowUpward className={classes.upArrowCardCategory} />{\" \"}\n                      55%\n                    </span>{\" \"}\n                    increase in today sales.\n                  </p>\n                </CardBody>\n                <CardFooter chart>\n                  <div className={classes.stats}>\n                    <AccessTime /> updated 4 minutes ago\n                  </div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={4}>\n              <Card chart className={classes.cardHover}>\n                <CardHeader color=\"warning\" className={classes.cardHeaderHover}>\n                  <ChartistGraph\n                    className=\"ct-chart-white-colors\"\n                    data={emailsSubscriptionChart.data}\n                    type=\"Bar\"\n                    options={emailsSubscriptionChart.options}\n                    responsiveOptions={\n                      emailsSubscriptionChart.responsiveOptions\n                    }\n                    listener={emailsSubscriptionChart.animation}\n                  />\n                </CardHeader>\n                <CardBody>\n                  <div className={classes.cardHoverUnder}>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Refresh\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button simple color=\"info\" justIcon>\n                        <Refresh className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Change Date\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button color=\"transparent\" simple justIcon>\n                        <Edit className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                  </div>\n                  <h4 className={classes.cardTitle}>Email Subscriptions</h4>\n                  <p className={classes.cardCategory}>\n                    Last Campaign Performance\n                  </p>\n                </CardBody>\n                <CardFooter chart>\n                  <div className={classes.stats}>\n                    <AccessTime /> campaign sent 2 days ago\n                  </div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n            <GridItem xs={12} sm={12} md={4}>\n              <Card chart className={classes.cardHover}>\n                <CardHeader color=\"danger\" className={classes.cardHeaderHover}>\n                  <ChartistGraph\n                    className=\"ct-chart-white-colors\"\n                    data={completedTasksChart.data}\n                    type=\"Line\"\n                    options={completedTasksChart.options}\n                    listener={completedTasksChart.animation}\n                  />\n                </CardHeader>\n                <CardBody>\n                  <div className={classes.cardHoverUnder}>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Refresh\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button simple color=\"info\" justIcon>\n                        <Refresh className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                    <Tooltip\n                      id=\"tooltip-top\"\n                      title=\"Change Date\"\n                      placement=\"bottom\"\n                      classes={{ tooltip: classes.tooltip }}\n                    >\n                      <Button color=\"transparent\" simple justIcon>\n                        <Edit className={classes.underChartIcons} />\n                      </Button>\n                    </Tooltip>\n                  </div>\n                  <h4 className={classes.cardTitle}>Completed Tasks</h4>\n                  <p className={classes.cardCategory}>\n                    Last Campaign Performance\n                  </p>\n                </CardBody>\n                <CardFooter chart>\n                  <div className={classes.stats}>\n                    <AccessTime /> campaign sent 2 days ago\n                  </div>\n                </CardFooter>\n              </Card>\n            </GridItem>\n          </GridContainer>\n        </div>\n      </Wrapper>\n    );\n  }\n}\n\nDashboard.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(dashboardStyle)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}