{"ast":null,"code":"import _classCallCheck from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Components/Notifications.jsx\";\n\n/*eslint-disable*/\nimport React from \"react\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\"; // @material-ui/icons\n\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Close from \"@material-ui/icons/Close\"; // core components\n\nimport Heading from \"components/Heading/Heading.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Snackbar from \"components/Snackbar/Snackbar.jsx\";\nimport Instruction from \"components/Instruction/Instruction.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\nimport notificationsStyle from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.jsx\";\nimport noticeModal1 from \"assets/img/card-1.jpeg\";\nimport noticeModal2 from \"assets/img/card-2.jpeg\";\n\nfunction Transition(props) {\n  return React.createElement(Slide, Object.assign({\n    direction: \"down\"\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }));\n}\n\nvar Notifications =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Notifications, _React$Component);\n\n  function Notifications(props) {\n    var _this;\n\n    _classCallCheck(this, Notifications);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Notifications).call(this, props));\n    _this.state = {\n      tl: false,\n      tc: false,\n      tr: false,\n      bl: false,\n      bc: false,\n      br: false,\n      classicModal: false,\n      noticeModal: false,\n      smallModal: false\n    };\n    return _this;\n  } // to stop the warning of calling setState of unmounted component\n\n\n  _createClass(Notifications, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var id = window.setTimeout(null, 0);\n\n      while (id--) {\n        window.clearTimeout(id);\n      }\n    }\n  }, {\n    key: \"showNotification\",\n    value: function showNotification(place) {\n      if (!this.state[place]) {\n        var x = [];\n        x[place] = true;\n        this.setState(x);\n        setTimeout(function () {\n          x[place] = false;\n          this.setState(x);\n        }.bind(this), 6000);\n      }\n    }\n  }, {\n    key: \"handleClickOpen\",\n    value: function handleClickOpen(modal) {\n      var x = [];\n      x[modal] = true;\n      this.setState(x);\n    }\n  }, {\n    key: \"handleClose\",\n    value: function handleClose(modal) {\n      var x = [];\n      x[modal] = false;\n      this.setState(x);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var classes = this.props.classes;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        title: \"Notifications\",\n        textAlign: \"center\",\n        category: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, \"Handcrafted by our friends from\", \" \", React.createElement(\"a\", {\n          target: \"_blank\",\n          href: \"https://material-ui-next.com/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92\n          },\n          __self: this\n        }, \"Material UI\"), \" \", \"and styled by\", \" \", React.createElement(\"a\", {\n          target: \"_blank\",\n          href: \"https://www.creative-tim.com/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, \"Creative Tim\"), \". Please checkout the\", \" \", React.createElement(\"a\", {\n          href: \"#pablo\",\n          target: \"_blank\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"full documentation\"), \".\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }), React.createElement(GridContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, \"Notifications Style\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a plain notification\",\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a notification with close button.\",\n        close: true,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\",\n        close: true,\n        icon: AddAlert,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'This is a notification with close button and icon and is made with color=\"rose\". You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don\\'t have to worry about the style.',\n        close: true,\n        icon: AddAlert,\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      })))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 6,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"Notification states\")), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'INFO - This is a regular notification made with color=\"info\"',\n        close: true,\n        color: \"info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'SUCCESS - This is a regular notification made with color=\"success\"',\n        close: true,\n        color: \"success\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'WARNING - This is a regular notification made with color=\"warning\"',\n        close: true,\n        color: \"warning\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'DANGER - This is a regular notification made with color=\"danger\"',\n        close: true,\n        color: \"danger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'PRIMARY - This is a regular notification made with color=\"primary\"',\n        close: true,\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(SnackbarContent, {\n        message: 'ROSE - This is a regular notification made with color=\"primary\"',\n        close: true,\n        color: \"rose\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }))))), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHeader + \" \" + classes.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206\n        },\n        __self: this\n      }, \"Notifications Places\"), React.createElement(\"p\", {\n        className: classes.cardSubtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 209\n        },\n        __self: this\n      }, \"Click to view notifications\")))), React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"tl\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"Top Left\"), React.createElement(Snackbar, {\n        place: \"tl\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.tl,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            tl: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"tc\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, \"Top Center\"), React.createElement(Snackbar, {\n        place: \"tc\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.tc,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            tc: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 252\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"tr\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253\n        },\n        __self: this\n      }, \"Top Right\"), React.createElement(Snackbar, {\n        place: \"tr\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.tr,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            tr: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 271\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"bl\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 273\n        },\n        __self: this\n      }, \"Bottom Left\"), React.createElement(Snackbar, {\n        place: \"bl\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.bl,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            bl: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 280\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"bc\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, \"Bottom Center\"), React.createElement(Snackbar, {\n        place: \"bc\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.bc,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            bc: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 298\n        },\n        __self: this\n      })), React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308\n        },\n        __self: this\n      }, React.createElement(Button, {\n        fullWidth: true,\n        color: \"primary\",\n        onClick: function onClick() {\n          return _this2.showNotification(\"br\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309\n        },\n        __self: this\n      }, \"Bottom Right\"), React.createElement(Snackbar, {\n        place: \"br\",\n        color: \"info\",\n        icon: AddAlert,\n        message: \"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\",\n        open: this.state.br,\n        closeNotification: function closeNotification() {\n          return _this2.setState({\n            br: false\n          });\n        },\n        close: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }))), React.createElement(GridContainer, {\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, React.createElement(GridItem, {\n        xs: 12,\n        sm: 12,\n        md: 12,\n        className: classes.center,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: classes.cardHeader + \" \" + classes.center + \" \" + classes.modalSectionTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 334\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        className: classes.cardTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 343\n        },\n        __self: this\n      }, \"Modal\")), React.createElement(Button, {\n        color: \"primary\",\n        round: true,\n        className: classes.marginRight,\n        onClick: function onClick() {\n          return _this2.handleClickOpen(\"classicModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"Classic modal\"), React.createElement(Dialog, {\n        classes: {\n          root: classes.center + \" \" + classes.modalRoot,\n          paper: classes.modal\n        },\n        open: this.state.classicModal,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: function onClose() {\n          return _this2.handleClose(\"classicModal\");\n        },\n        \"aria-labelledby\": \"classic-modal-slide-title\",\n        \"aria-describedby\": \"classic-modal-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"classic-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 365\n        },\n        __self: this\n      }, React.createElement(Button, {\n        justIcon: true,\n        className: classes.modalCloseButton,\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"transparent\",\n        onClick: function onClick() {\n          return _this2.handleClose(\"classicModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }, \"Modal title\")), React.createElement(DialogContent, {\n        id: \"classic-modal-slide-description\",\n        className: classes.modalBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 382\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }, \"Far far away, behind the word mountains, far from the countries Vokalia and Consonantia, there live the blind texts. Separated they live in Bookmarksgrove right at the coast of the Semantics, a large language ocean. A small river named Duden flows by their place and supplies it with the necessary regelialia. It is a paradisematic country, in which roasted parts of sentences fly into your mouth. Even the all-powerful Pointing has no control about the blind texts it is an almost unorthographic life One day however a small line of blind text by the name of Lorem Ipsum decided to leave for the far World of Grammar.\")), React.createElement(DialogActions, {\n        className: classes.modalFooter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"transparent\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, \"Nice Button\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"classicModal\");\n        },\n        color: \"danger\",\n        simple: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, \"Close\"))), React.createElement(Button, {\n        color: \"info\",\n        round: true,\n        className: classes.marginRight,\n        onClick: function onClick() {\n          return _this2.handleClickOpen(\"noticeModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, \"Notice Modal\"), React.createElement(Dialog, {\n        classes: {\n          root: classes.center + \" \" + classes.modalRoot,\n          paper: classes.modal\n        },\n        open: this.state.noticeModal,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: function onClose() {\n          return _this2.handleClose(\"noticeModal\");\n        },\n        \"aria-labelledby\": \"notice-modal-slide-title\",\n        \"aria-describedby\": \"notice-modal-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"notice-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 433\n        },\n        __self: this\n      }, React.createElement(Button, {\n        justIcon: true,\n        className: classes.modalCloseButton,\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"transparent\",\n        onClick: function onClick() {\n          return _this2.handleClose(\"noticeModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 446\n        },\n        __self: this\n      })), React.createElement(\"h4\", {\n        className: classes.modalTitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 448\n        },\n        __self: this\n      }, \"Notice Modal\")), React.createElement(DialogContent, {\n        id: \"notice-modal-slide-description\",\n        className: classes.modalBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(Instruction, {\n        title: \"1. Register\",\n        text: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 457\n          },\n          __self: this\n        }, \"The first step is to create an account at\", \" \", React.createElement(\"a\", {\n          href: \"https://www.creative-tim.com/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 459\n          },\n          __self: this\n        }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n        image: noticeModal1,\n        className: classes.instructionNoticeModal,\n        imageClassName: classes.imageNoticeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 454\n        },\n        __self: this\n      }), React.createElement(Instruction, {\n        title: \"2. Apply\",\n        text: React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 473\n          },\n          __self: this\n        }, \"The first step is to create an account at\", \" \", React.createElement(\"a\", {\n          href: \"https://www.creative-tim.com/\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 475\n          },\n          __self: this\n        }, \"Creative Tim\"), \". You can choose a social network or go for the classic version, whatever works best for you.\"),\n        image: noticeModal2,\n        className: classes.instructionNoticeModal,\n        imageClassName: classes.imageNoticeModal,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"If you have more questions, don't hesitate to contact us or send us a tweet @creativetim. We're here to help!\")), React.createElement(DialogActions, {\n        className: classes.modalFooter + \" \" + classes.modalFooterCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"noticeModal\");\n        },\n        color: \"info\",\n        round: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }, \"Sounds Good\"))), React.createElement(Button, {\n        color: \"rose\",\n        round: true,\n        className: classes.marginRight,\n        onClick: function onClick() {\n          return _this2.handleClickOpen(\"smallModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508\n        },\n        __self: this\n      }, \"Small alert modal\"), React.createElement(Dialog, {\n        classes: {\n          root: classes.center + \" \" + classes.modalRoot,\n          paper: classes.modal + \" \" + classes.modalSmall\n        },\n        open: this.state.smallModal,\n        TransitionComponent: Transition,\n        keepMounted: true,\n        onClose: function onClose() {\n          return _this2.handleClose(\"noticeModal\");\n        },\n        \"aria-labelledby\": \"small-modal-slide-title\",\n        \"aria-describedby\": \"small-modal-slide-description\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516\n        },\n        __self: this\n      }, React.createElement(DialogTitle, {\n        id: \"small-modal-slide-title\",\n        disableTypography: true,\n        className: classes.modalHeader,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 528\n        },\n        __self: this\n      }, React.createElement(Button, {\n        justIcon: true,\n        className: classes.modalCloseButton,\n        key: \"close\",\n        \"aria-label\": \"Close\",\n        color: \"transparent\",\n        onClick: function onClick() {\n          return _this2.handleClose(\"smallModal\");\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 533\n        },\n        __self: this\n      }, React.createElement(Close, {\n        className: classes.modalClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 541\n        },\n        __self: this\n      }))), React.createElement(DialogContent, {\n        id: \"small-modal-slide-description\",\n        className: classes.modalBody + \" \" + classes.modalSmallBody,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544\n        },\n        __self: this\n      }, React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550\n        },\n        __self: this\n      }, \"Are you sure you want to do this?\")), React.createElement(DialogActions, {\n        className: classes.modalFooter + \" \" + classes.modalFooterCenter,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552\n        },\n        __self: this\n      }, React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"smallModal\");\n        },\n        color: \"transparent\",\n        className: classes.modalSmallFooterFirstButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559\n        },\n        __self: this\n      }, \"Never Mind\"), React.createElement(Button, {\n        onClick: function onClick() {\n          return _this2.handleClose(\"smallModal\");\n        },\n        color: \"success\",\n        simple: true,\n        className: classes.modalSmallFooterFirstButton + \" \" + classes.modalSmallFooterSecondButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 566\n        },\n        __self: this\n      }, \"Yes\")))))))))));\n    }\n  }]);\n\n  return Notifications;\n}(React.Component);\n\nexport default withStyles(notificationsStyle)(Notifications);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/views/Components/Notifications.jsx"],"names":["React","withStyles","Slide","Dialog","DialogTitle","DialogContent","DialogActions","AddAlert","Close","Heading","GridContainer","GridItem","SnackbarContent","Button","Snackbar","Instruction","Card","CardBody","notificationsStyle","noticeModal1","noticeModal2","Transition","props","Notifications","state","tl","tc","tr","bl","bc","br","classicModal","noticeModal","smallModal","id","window","setTimeout","clearTimeout","place","x","setState","bind","modal","classes","cardHeader","cardTitle","center","cardSubtitle","showNotification","modalSectionTitle","marginRight","handleClickOpen","root","modalRoot","paper","handleClose","modalHeader","modalCloseButton","modalClose","modalTitle","modalBody","modalFooter","instructionNoticeModal","imageNoticeModal","modalFooterCenter","modalSmall","modalSmallBody","modalSmallFooterFirstButton","modalSmallFooterSecondButton","Component"],"mappings":"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","sourcesContent":["/*eslint-disable*/\nimport React from \"react\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\n\n// @material-ui/icons\nimport AddAlert from \"@material-ui/icons/AddAlert\";\nimport Close from \"@material-ui/icons/Close\";\n\n// core components\nimport Heading from \"components/Heading/Heading.jsx\";\nimport GridContainer from \"components/Grid/GridContainer.jsx\";\nimport GridItem from \"components/Grid/GridItem.jsx\";\nimport SnackbarContent from \"components/Snackbar/SnackbarContent.jsx\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport Snackbar from \"components/Snackbar/Snackbar.jsx\";\nimport Instruction from \"components/Instruction/Instruction.jsx\";\nimport Card from \"components/Card/Card.jsx\";\nimport CardBody from \"components/Card/CardBody.jsx\";\n\nimport notificationsStyle from \"assets/jss/material-dashboard-pro-react/views/notificationsStyle.jsx\";\n\nimport noticeModal1 from \"assets/img/card-1.jpeg\";\nimport noticeModal2 from \"assets/img/card-2.jpeg\";\n\nfunction Transition(props) {\n  return <Slide direction=\"down\" {...props} />;\n}\n\nclass Notifications extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tl: false,\n      tc: false,\n      tr: false,\n      bl: false,\n      bc: false,\n      br: false,\n      classicModal: false,\n      noticeModal: false,\n      smallModal: false\n    };\n  }\n  // to stop the warning of calling setState of unmounted component\n  componentWillUnmount() {\n    let id = window.setTimeout(null, 0);\n    while (id--) {\n      window.clearTimeout(id);\n    }\n  }\n  showNotification(place) {\n    if (!this.state[place]) {\n      let x = [];\n      x[place] = true;\n      this.setState(x);\n      setTimeout(\n        function() {\n          x[place] = false;\n          this.setState(x);\n        }.bind(this),\n        6000\n      );\n    }\n  }\n  handleClickOpen(modal) {\n    let x = [];\n    x[modal] = true;\n    this.setState(x);\n  }\n  handleClose(modal) {\n    let x = [];\n    x[modal] = false;\n    this.setState(x);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <div>\n        <Heading\n          title=\"Notifications\"\n          textAlign=\"center\"\n          category={\n            <span>\n              Handcrafted by our friends from{\" \"}\n              <a target=\"_blank\" href=\"https://material-ui-next.com/\">\n                Material UI\n              </a>{\" \"}\n              and styled by{\" \"}\n              <a target=\"_blank\" href=\"https://www.creative-tim.com/\">\n                Creative Tim\n              </a>. Please checkout the{\" \"}\n              <a href=\"#pablo\" target=\"_blank\">\n                full documentation\n              </a>.\n            </span>\n          }\n        />\n        <GridContainer>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card>\n              <CardBody>\n                <div className={classes.cardHeader}>\n                  <h4 className={classes.cardTitle}>Notifications Style</h4>\n                </div>\n                <br />\n                <SnackbarContent\n                  message={\"This is a plain notification\"}\n                  color=\"info\"\n                />\n                <SnackbarContent\n                  message={\"This is a notification with close button.\"}\n                  close\n                  color=\"info\"\n                />\n                <br />\n                <SnackbarContent\n                  message={\n                    \"This is a notification with close button and icon and have many lines. You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don't have to worry about the style.\"\n                  }\n                  close\n                  icon={AddAlert}\n                  color=\"info\"\n                />\n                <br />\n                <SnackbarContent\n                  message={\n                    'This is a notification with close button and icon and is made with color=\"rose\". You can see that the icon and the close button are always vertically aligned. This is a beautiful notification. So you don\\'t have to worry about the style.'\n                  }\n                  close\n                  icon={AddAlert}\n                  color=\"rose\"\n                />\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={6}>\n            <Card>\n              <CardBody>\n                <div>\n                  <div className={classes.cardHeader}>\n                    <h4 className={classes.cardTitle}>Notification states</h4>\n                  </div>\n                  <br />\n                  <SnackbarContent\n                    message={\n                      'INFO - This is a regular notification made with color=\"info\"'\n                    }\n                    close\n                    color=\"info\"\n                  />\n                  <SnackbarContent\n                    message={\n                      'SUCCESS - This is a regular notification made with color=\"success\"'\n                    }\n                    close\n                    color=\"success\"\n                  />\n                  <SnackbarContent\n                    message={\n                      'WARNING - This is a regular notification made with color=\"warning\"'\n                    }\n                    close\n                    color=\"warning\"\n                  />\n                  <SnackbarContent\n                    message={\n                      'DANGER - This is a regular notification made with color=\"danger\"'\n                    }\n                    close\n                    color=\"danger\"\n                  />\n                  <SnackbarContent\n                    message={\n                      'PRIMARY - This is a regular notification made with color=\"primary\"'\n                    }\n                    close\n                    color=\"primary\"\n                  />\n                  <SnackbarContent\n                    message={\n                      'ROSE - This is a regular notification made with color=\"primary\"'\n                    }\n                    close\n                    color=\"rose\"\n                  />\n                </div>\n              </CardBody>\n            </Card>\n          </GridItem>\n          <GridItem xs={12} sm={12} md={12}>\n            <Card>\n              <CardBody>\n                <div>\n                  <GridContainer justify=\"center\">\n                    <GridItem xs={12}>\n                      <div\n                        className={classes.cardHeader + \" \" + classes.center}\n                      >\n                        <h4 className={classes.cardTitle}>\n                          Notifications Places\n                        </h4>\n                        <p className={classes.cardSubtitle}>\n                          Click to view notifications\n                        </p>\n                      </div>\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"tl\")}\n                      >\n                        Top Left\n                      </Button>\n                      <Snackbar\n                        place=\"tl\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.tl}\n                        closeNotification={() => this.setState({ tl: false })}\n                        close\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"tc\")}\n                      >\n                        Top Center\n                      </Button>\n                      <Snackbar\n                        place=\"tc\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.tc}\n                        closeNotification={() => this.setState({ tc: false })}\n                        close\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"tr\")}\n                      >\n                        Top Right\n                      </Button>\n                      <Snackbar\n                        place=\"tr\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.tr}\n                        closeNotification={() => this.setState({ tr: false })}\n                        close\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer justify=\"center\">\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"bl\")}\n                      >\n                        Bottom Left\n                      </Button>\n                      <Snackbar\n                        place=\"bl\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.bl}\n                        closeNotification={() => this.setState({ bl: false })}\n                        close\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"bc\")}\n                      >\n                        Bottom Center\n                      </Button>\n                      <Snackbar\n                        place=\"bc\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.bc}\n                        closeNotification={() => this.setState({ bc: false })}\n                        close\n                      />\n                    </GridItem>\n                    <GridItem xs={12} sm={12} md={3}>\n                      <Button\n                        fullWidth\n                        color=\"primary\"\n                        onClick={() => this.showNotification(\"br\")}\n                      >\n                        Bottom Right\n                      </Button>\n                      <Snackbar\n                        place=\"br\"\n                        color=\"info\"\n                        icon={AddAlert}\n                        message=\"Welcome to MATERIAL DASHBOARD React - a beautiful freebie for every web developer.\"\n                        open={this.state.br}\n                        closeNotification={() => this.setState({ br: false })}\n                        close\n                      />\n                    </GridItem>\n                  </GridContainer>\n                  <GridContainer justify=\"center\">\n                    <GridItem\n                      xs={12}\n                      sm={12}\n                      md={12}\n                      className={classes.center}\n                    >\n                      <div\n                        className={\n                          classes.cardHeader +\n                          \" \" +\n                          classes.center +\n                          \" \" +\n                          classes.modalSectionTitle\n                        }\n                      >\n                        <h4 className={classes.cardTitle}>Modal</h4>\n                      </div>\n                      <Button\n                        color=\"primary\"\n                        round\n                        className={classes.marginRight}\n                        onClick={() => this.handleClickOpen(\"classicModal\")}\n                      >\n                        Classic modal\n                      </Button>\n                      <Dialog\n                        classes={{\n                          root: classes.center + \" \" + classes.modalRoot,\n                          paper: classes.modal\n                        }}\n                        open={this.state.classicModal}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={() => this.handleClose(\"classicModal\")}\n                        aria-labelledby=\"classic-modal-slide-title\"\n                        aria-describedby=\"classic-modal-slide-description\"\n                      >\n                        <DialogTitle\n                          id=\"classic-modal-slide-title\"\n                          disableTypography\n                          className={classes.modalHeader}\n                        >\n                          <Button\n                            justIcon\n                            className={classes.modalCloseButton}\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"transparent\"\n                            onClick={() => this.handleClose(\"classicModal\")}\n                          >\n                            <Close className={classes.modalClose} />\n                          </Button>\n                          <h4 className={classes.modalTitle}>Modal title</h4>\n                        </DialogTitle>\n                        <DialogContent\n                          id=\"classic-modal-slide-description\"\n                          className={classes.modalBody}\n                        >\n                          <p>\n                            Far far away, behind the word mountains, far from\n                            the countries Vokalia and Consonantia, there live\n                            the blind texts. Separated they live in\n                            Bookmarksgrove right at the coast of the Semantics,\n                            a large language ocean. A small river named Duden\n                            flows by their place and supplies it with the\n                            necessary regelialia. It is a paradisematic country,\n                            in which roasted parts of sentences fly into your\n                            mouth. Even the all-powerful Pointing has no control\n                            about the blind texts it is an almost unorthographic\n                            life One day however a small line of blind text by\n                            the name of Lorem Ipsum decided to leave for the far\n                            World of Grammar.\n                          </p>\n                        </DialogContent>\n                        <DialogActions className={classes.modalFooter}>\n                          <Button color=\"transparent\">Nice Button</Button>\n                          <Button\n                            onClick={() => this.handleClose(\"classicModal\")}\n                            color=\"danger\"\n                            simple\n                          >\n                            Close\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                      <Button\n                        color=\"info\"\n                        round\n                        className={classes.marginRight}\n                        onClick={() => this.handleClickOpen(\"noticeModal\")}\n                      >\n                        Notice Modal\n                      </Button>\n                      <Dialog\n                        classes={{\n                          root: classes.center + \" \" + classes.modalRoot,\n                          paper: classes.modal\n                        }}\n                        open={this.state.noticeModal}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={() => this.handleClose(\"noticeModal\")}\n                        aria-labelledby=\"notice-modal-slide-title\"\n                        aria-describedby=\"notice-modal-slide-description\"\n                      >\n                        <DialogTitle\n                          id=\"notice-modal-slide-title\"\n                          disableTypography\n                          className={classes.modalHeader}\n                        >\n                          <Button\n                            justIcon\n                            className={classes.modalCloseButton}\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"transparent\"\n                            onClick={() => this.handleClose(\"noticeModal\")}\n                          >\n                            <Close className={classes.modalClose} />\n                          </Button>\n                          <h4 className={classes.modalTitle}>Notice Modal</h4>\n                        </DialogTitle>\n                        <DialogContent\n                          id=\"notice-modal-slide-description\"\n                          className={classes.modalBody}\n                        >\n                          <Instruction\n                            title=\"1. Register\"\n                            text={\n                              <span>\n                                The first step is to create an account at{\" \"}\n                                <a href=\"https://www.creative-tim.com/\">\n                                  Creative Tim\n                                </a>. You can choose a social network or go for\n                                the classic version, whatever works best for\n                                you.\n                              </span>\n                            }\n                            image={noticeModal1}\n                            className={classes.instructionNoticeModal}\n                            imageClassName={classes.imageNoticeModal}\n                          />\n                          <Instruction\n                            title=\"2. Apply\"\n                            text={\n                              <span>\n                                The first step is to create an account at{\" \"}\n                                <a href=\"https://www.creative-tim.com/\">\n                                  Creative Tim\n                                </a>. You can choose a social network or go for\n                                the classic version, whatever works best for\n                                you.\n                              </span>\n                            }\n                            image={noticeModal2}\n                            className={classes.instructionNoticeModal}\n                            imageClassName={classes.imageNoticeModal}\n                          />\n                          <p>\n                            If you have more questions, don't hesitate to\n                            contact us or send us a tweet @creativetim. We're\n                            here to help!\n                          </p>\n                        </DialogContent>\n                        <DialogActions\n                          className={\n                            classes.modalFooter +\n                            \" \" +\n                            classes.modalFooterCenter\n                          }\n                        >\n                          <Button\n                            onClick={() => this.handleClose(\"noticeModal\")}\n                            color=\"info\"\n                            round\n                          >\n                            Sounds Good\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                      <Button\n                        color=\"rose\"\n                        round\n                        className={classes.marginRight}\n                        onClick={() => this.handleClickOpen(\"smallModal\")}\n                      >\n                        Small alert modal\n                      </Button>\n                      <Dialog\n                        classes={{\n                          root: classes.center + \" \" + classes.modalRoot,\n                          paper: classes.modal + \" \" + classes.modalSmall\n                        }}\n                        open={this.state.smallModal}\n                        TransitionComponent={Transition}\n                        keepMounted\n                        onClose={() => this.handleClose(\"noticeModal\")}\n                        aria-labelledby=\"small-modal-slide-title\"\n                        aria-describedby=\"small-modal-slide-description\"\n                      >\n                        <DialogTitle\n                          id=\"small-modal-slide-title\"\n                          disableTypography\n                          className={classes.modalHeader}\n                        >\n                          <Button\n                            justIcon\n                            className={classes.modalCloseButton}\n                            key=\"close\"\n                            aria-label=\"Close\"\n                            color=\"transparent\"\n                            onClick={() => this.handleClose(\"smallModal\")}\n                          >\n                            <Close className={classes.modalClose} />\n                          </Button>\n                        </DialogTitle>\n                        <DialogContent\n                          id=\"small-modal-slide-description\"\n                          className={\n                            classes.modalBody + \" \" + classes.modalSmallBody\n                          }\n                        >\n                          <h5>Are you sure you want to do this?</h5>\n                        </DialogContent>\n                        <DialogActions\n                          className={\n                            classes.modalFooter +\n                            \" \" +\n                            classes.modalFooterCenter\n                          }\n                        >\n                          <Button\n                            onClick={() => this.handleClose(\"smallModal\")}\n                            color=\"transparent\"\n                            className={classes.modalSmallFooterFirstButton}\n                          >\n                            Never Mind\n                          </Button>\n                          <Button\n                            onClick={() => this.handleClose(\"smallModal\")}\n                            color=\"success\"\n                            simple\n                            className={\n                              classes.modalSmallFooterFirstButton +\n                              \" \" +\n                              classes.modalSmallFooterSecondButton\n                            }\n                          >\n                            Yes\n                          </Button>\n                        </DialogActions>\n                      </Dialog>\n                    </GridItem>\n                  </GridContainer>\n                </div>\n              </CardBody>\n            </Card>\n          </GridItem>\n        </GridContainer>\n      </div>\n    );\n  }\n}\n\nexport default withStyles(notificationsStyle)(Notifications);\n"]},"metadata":{},"sourceType":"module"}