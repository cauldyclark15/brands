{"ast":null,"code":"import _defineProperty from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/node_modules/@babel/runtime/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Header/Header.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\"; // @material-ui/core components\n\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\"; // material-ui icons\n\nimport Menu from \"@material-ui/icons/Menu\";\nimport MoreVert from \"@material-ui/icons/MoreVert\";\nimport ViewList from \"@material-ui/icons/ViewList\"; // core components\n\nimport HeaderLinks from \"./HeaderLinks\";\nimport Button from \"components/CustomButtons/Button.jsx\";\nimport headerStyle from \"assets/jss/material-dashboard-pro-react/components/headerStyle.jsx\";\n\nfunction Header(_ref) {\n  var props = _extends({}, _ref);\n\n  function makeBrand() {\n    var name;\n    props.routes.map(function (prop, key) {\n      if (prop.collapse) {\n        prop.views.map(function (prop, key) {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n\n          return null;\n        });\n      }\n\n      if (prop.path === props.location.pathname) {\n        name = prop.name;\n      }\n\n      return null;\n    });\n\n    if (name) {\n      return name;\n    } else {\n      return \"Default Brand Name\";\n    }\n  }\n\n  var classes = props.classes,\n      color = props.color,\n      rtlActive = props.rtlActive;\n  var appBarClasses = cx(_defineProperty({}, \" \" + classes[color], color));\n  var sidebarMinimize = classes.sidebarMinimize + \" \" + cx(_defineProperty({}, classes.sidebarMinimizeRTL, rtlActive));\n  return React.createElement(AppBar, {\n    className: classes.appBar + appBarClasses,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(Toolbar, {\n    className: classes.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: sidebarMinimize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, props.miniActive ? React.createElement(Button, {\n    justIcon: true,\n    round: true,\n    color: \"white\",\n    onClick: props.sidebarMinimize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(ViewList, {\n    className: classes.sidebarMiniIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  })) : React.createElement(Button, {\n    justIcon: true,\n    round: true,\n    color: \"white\",\n    onClick: props.sidebarMinimize,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(MoreVert, {\n    className: classes.sidebarMiniIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  })))), React.createElement(\"div\", {\n    className: classes.flex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, React.createElement(Button, {\n    href: \"#\",\n    className: classes.title,\n    color: \"transparent\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, makeBrand())), React.createElement(Hidden, {\n    smDown: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(HeaderLinks, {\n    rtlActive: rtlActive,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Hidden, {\n    mdUp: true,\n    implementation: \"css\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    className: classes.appResponsive,\n    color: \"transparent\",\n    justIcon: true,\n    \"aria-label\": \"open drawer\",\n    onClick: props.handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(Menu, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })))));\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool\n};\nexport default withStyles(headerStyle)(Header);","map":{"version":3,"sources":["/Users/cauldyclark15/Documents/freelance/code-exams/brands/src/components/Header/Header.jsx"],"names":["React","PropTypes","cx","withStyles","AppBar","Toolbar","Hidden","Menu","MoreVert","ViewList","HeaderLinks","Button","headerStyle","Header","props","makeBrand","name","routes","map","prop","key","collapse","views","path","location","pathname","classes","color","rtlActive","appBarClasses","sidebarMinimize","sidebarMinimizeRTL","appBar","container","miniActive","sidebarMiniIcon","flex","title","appResponsive","handleDrawerToggle","propTypes","object","isRequired","oneOf","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport cx from \"classnames\";\n\n// @material-ui/core components\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\n// material-ui icons\nimport Menu from \"@material-ui/icons/Menu\";\nimport MoreVert from \"@material-ui/icons/MoreVert\";\nimport ViewList from \"@material-ui/icons/ViewList\";\n\n// core components\nimport HeaderLinks from \"./HeaderLinks\";\nimport Button from \"components/CustomButtons/Button.jsx\";\n\nimport headerStyle from \"assets/jss/material-dashboard-pro-react/components/headerStyle.jsx\";\n\nfunction Header({ ...props }) {\n  function makeBrand() {\n    var name;\n    props.routes.map((prop, key) => {\n      if (prop.collapse) {\n        prop.views.map((prop, key) => {\n          if (prop.path === props.location.pathname) {\n            name = prop.name;\n          }\n          return null;\n        });\n      }\n      if (prop.path === props.location.pathname) {\n        name = prop.name;\n      }\n      return null;\n    });\n    if(name){\n      return name;\n    } else {\n      return \"Default Brand Name\";\n    }\n  }\n  const { classes, color, rtlActive } = props;\n  const appBarClasses = cx({\n    [\" \" + classes[color]]: color\n  });\n  const sidebarMinimize =\n    classes.sidebarMinimize +\n    \" \" +\n    cx({\n      [classes.sidebarMinimizeRTL]: rtlActive\n    });\n  return (\n    <AppBar className={classes.appBar + appBarClasses}>\n      <Toolbar className={classes.container}>\n        <Hidden smDown implementation=\"css\">\n          <div className={sidebarMinimize}>\n            {props.miniActive ? (\n              <Button\n                justIcon\n                round\n                color=\"white\"\n                onClick={props.sidebarMinimize}\n              >\n                <ViewList className={classes.sidebarMiniIcon} />\n              </Button>\n            ) : (\n              <Button\n                justIcon\n                round\n                color=\"white\"\n                onClick={props.sidebarMinimize}\n              >\n                <MoreVert className={classes.sidebarMiniIcon} />\n              </Button>\n            )}\n          </div>\n        </Hidden>\n        <div className={classes.flex}>\n          {/* Here we create navbar brand, based on route name */}\n          <Button href=\"#\" className={classes.title} color=\"transparent\">\n            {makeBrand()}\n          </Button>\n        </div>\n        <Hidden smDown implementation=\"css\">\n          <HeaderLinks rtlActive={rtlActive} />\n        </Hidden>\n        <Hidden mdUp implementation=\"css\">\n          <Button\n            className={classes.appResponsive}\n            color=\"transparent\"\n            justIcon\n            aria-label=\"open drawer\"\n            onClick={props.handleDrawerToggle}\n          >\n            <Menu />\n          </Button>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nHeader.propTypes = {\n  classes: PropTypes.object.isRequired,\n  color: PropTypes.oneOf([\"primary\", \"info\", \"success\", \"warning\", \"danger\"]),\n  rtlActive: PropTypes.bool\n};\n\nexport default withStyles(headerStyle)(Header);\n"]},"metadata":{},"sourceType":"module"}